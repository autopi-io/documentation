(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{129:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var b=c.a.createContext({}),d=function(e){var t=c.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return c.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},u=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),s=d(n),u=r,O=s["".concat(a,".").concat(u)]||s[u]||p[u]||o;return n?c.a.createElement(O,l(l({ref:t},b),{},{components:n})):c.a.createElement(O,l({ref:t},b))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var b=2;b<o;b++)a[b]=n[b];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},68:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return d}));var r=n(2),c=n(6),o=(n(0),n(129)),a={id:"core-services-ec2x",title:"Ec2X Manager"},l={unversionedId:"core/services/core-services-ec2x",id:"core/services/core-services-ec2x",isDocsHomePage:!1,title:"Ec2X Manager",description:"Handlers",source:"@site/docs/core/services/ec2x_manager.md",slug:"/core/services/core-services-ec2x",permalink:"/documentation/docs/core/services/core-services-ec2x",version:"current",sidebar:"coreSidebar",previous:{title:"Cloud Manager",permalink:"/documentation/docs/core/services/core-services-cloud"},next:{title:"Event Reactor",permalink:"/documentation/docs/core/services/core-services-event"}},i=[{value:"Handlers",id:"handlers",children:[{value:"<code>connection</code>",id:"connection",children:[]},{value:"<code>context</code>",id:"context",children:[]},{value:"<code>download</code>",id:"download",children:[]},{value:"<code>exec</code>",id:"exec",children:[]},{value:"<code>power</code>",id:"power",children:[]},{value:"<code>sync_time</code>",id:"sync_time",children:[]},{value:"<code>upload</code>",id:"upload",children:[]}]}],b={rightToc:i};function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"handlers"},"Handlers"),Object(o.b)("h3",{id:"connection"},Object(o.b)("inlineCode",{parentName:"h3"},"connection")),Object(o.b)("p",null,"Manages current connection."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"close"))," (bool): Close serial connection? Default value is ",Object(o.b)("inlineCode",{parentName:"li"},"False"),". ")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"context"},Object(o.b)("inlineCode",{parentName:"h3"},"context")),Object(o.b)("p",null,"Gets current context."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"download"},Object(o.b)("inlineCode",{parentName:"h3"},"download")),Object(o.b)("p",null,"Downloads a file from the EC2X device."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"cmd"))," (str): AT command to perform the actual download."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"size"))," (int): Size of the file to download."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"dest"))," (str): Destination path to which the downloaded file is to be written.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"exec"},Object(o.b)("inlineCode",{parentName:"h3"},"exec")),Object(o.b)("p",null,"Runs an AT command against the EC2X device."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"cmd"))," (str): AT command to execute.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"power"},Object(o.b)("inlineCode",{parentName:"h3"},"power")),Object(o.b)("p",null,"Powers down the EC2X device. Afterwards the module will start automatically.\nA 30-second wait is included after power off to allow the module time to recover before receiving any new requests."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"cmd"))," (str): AT command to perform the power down.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to power down. Default is ",Object(o.b)("inlineCode",{parentName:"li"},"unknown"),".")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"sync_time"},Object(o.b)("inlineCode",{parentName:"h3"},"sync_time")),Object(o.b)("p",null,"Synchronizes the system clock with the EC2X device."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"force"))," (bool): Default is ",Object(o.b)("inlineCode",{parentName:"li"},"False"),".")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"upload"},Object(o.b)("inlineCode",{parentName:"h3"},"upload")),Object(o.b)("p",null,"Uploads a file to the EC2X device."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"cmd"))," (str): AT command to perform the actual upload."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"src"))," (str): Destination path to the file to be uploaded.")))}d.isMDXComponent=!0}}]);