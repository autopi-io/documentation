(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{129:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return f}));var r=n(0),i=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),p=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,f=s["".concat(o,".").concat(d)]||s[d]||b[d]||c;return n?i.a.createElement(f,a(a({ref:t},u),{},{components:n})):i.a.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var u=2;u<c;u++)o[u]=n[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),i=n(6),c=(n(0),n(129)),o={id:"core-cmd-wifi",title:"Wifi"},a={unversionedId:"core/commands/core-cmd-wifi",id:"core/commands/core-cmd-wifi",isDocsHomePage:!1,title:"Wifi",description:"wifi.help",source:"@site/docs/core/commands/wifi.md",slug:"/core/commands/core-cmd-wifi",permalink:"/documentation/docs/core/commands/core-cmd-wifi",version:"current",sidebar:"coreSidebar",previous:{title:"Tracking",permalink:"/documentation/docs/core/commands/core-cmd-tracking"},next:{title:"Using Power Management",permalink:"/documentation/docs/core/power/core-power"}},l=[{value:"<code>wifi.help</code>",id:"wifihelp",children:[]},{value:"<code>wifi.scan</code>",id:"wifiscan",children:[]},{value:"<code>wifi.status</code>",id:"wifistatus",children:[]}],u={rightToc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"wifihelp"},Object(c.b)("inlineCode",{parentName:"h2"},"wifi.help")),Object(c.b)("p",null,"Shows this help information."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"wifiscan"},Object(c.b)("inlineCode",{parentName:"h2"},"wifi.scan")),Object(c.b)("p",null,"Give the list of Access Points and Ad-Hoc cells in range."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"interface"))," (str): Default is ",Object(c.b)("inlineCode",{parentName:"li"},"wlan0"),".")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"wifistatus"},Object(c.b)("inlineCode",{parentName:"h2"},"wifi.status")),Object(c.b)("p",null,"Get current WPA/EAPOL/EAP status."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"interface"))," (str): Default is ",Object(c.b)("inlineCode",{parentName:"li"},"wlan0"),".")))}p.isMDXComponent=!0}}]);