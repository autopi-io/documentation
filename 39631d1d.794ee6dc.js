(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{129:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=a.a.createContext({}),p=function(e){var n=a.a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},b=function(e){var n=p(e.components);return a.a.createElement(m.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),b=p(t),u=r,d=b["".concat(l,".").concat(u)]||b[u]||s[u]||c;return t?a.a.createElement(d,o(o({ref:n},m),{},{components:t})):a.a.createElement(d,o({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,l=new Array(c);l[0]=u;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<c;m++)l[m]=t[m];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},81:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return p}));var r=t(2),a=t(6),c=(t(0),t(129)),l={id:"core-cmd-spm",title:"Spm"},o={unversionedId:"core/commands/core-cmd-spm",id:"core/commands/core-cmd-spm",isDocsHomePage:!1,title:"Spm",description:"spm.flash_firmware",source:"@site/docs/core/commands/spm.md",slug:"/core/commands/core-cmd-spm",permalink:"/documentation/docs/core/commands/core-cmd-spm",version:"current",sidebar:"coreSidebar",previous:{title:"Rpi",permalink:"/documentation/docs/core/commands/core-cmd-rpi"},next:{title:"Stn",permalink:"/documentation/docs/core/commands/core-cmd-stn"}},i=[{value:"<code>spm.flash_firmware</code>",id:"spmflash_firmware",children:[]},{value:"<code>spm.help</code>",id:"spmhelp",children:[]},{value:"<code>spm.led_pwm</code>",id:"spmled_pwm",children:[]},{value:"<code>spm.manage</code>",id:"spmmanage",children:[]},{value:"<code>spm.query</code>",id:"spmquery",children:[]},{value:"<code>spm.reset</code>",id:"spmreset",children:[]}],m={rightToc:i};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"spmflash_firmware"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.flash_firmware")),Object(c.b)("p",null,"Flashes new SPM firmware to ATtiny."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"spmhelp"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.help")),Object(c.b)("p",null,"Shows this help information."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"spmled_pwm"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.led_pwm")),Object(c.b)("p",null,"Change PWM frequency and/or duty cycle for LED."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"frequency"))," (float): Change to frequency in Hz."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"duty_cycle"))," (float): Change to duty cycle in percent.")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"spmmanage"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.manage")),Object(c.b)("p",null,"Runtime management of the underlying service instance."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"SUPPORTED COMMANDS")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"hook list|call <name> [argument]... [<key>=<value>]...")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"worker list|show|start|pause|resume|kill <name>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"run <key>=<value>..."))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"EXAMPLES")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage hook list")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage hook call query_handler status")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker list *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker show *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker start *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker pause *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker resume *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"spm.manage worker kill *")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},'spm.manage run handler="query" args="[\\"status\\"]"'))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"spmquery"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.query")),Object(c.b)("p",null,"Queries a given SPM command."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"cmd"))," (str): The SPM command to query.")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"spmreset"},Object(c.b)("inlineCode",{parentName:"h2"},"spm.reset")),Object(c.b)("p",null,"Reset/restart ATtiny."))}p.isMDXComponent=!0}}]);