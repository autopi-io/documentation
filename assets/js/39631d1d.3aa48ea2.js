(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[4853],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),p=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(m.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,k=u["".concat(m,".").concat(d)]||u[d]||c[d]||l;return t?r.createElement(k,o(o({ref:n},s),{},{components:t})):r.createElement(k,o({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=u;var i={};for(var m in n)hasOwnProperty.call(n,m)&&(i[m]=n[m]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1489:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=t(2122),a=t(9756),l=(t(7294),t(3905)),o=["components"],i={id:"core-commands-spm",title:"Spm"},m=void 0,p={unversionedId:"core/commands/core-commands-spm",id:"core/commands/core-commands-spm",isDocsHomePage:!1,title:"Spm",description:"spm.flash_firmware",source:"@site/docs/core/commands/spm.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-spm",permalink:"/core/commands/core-commands-spm",tags:[],version:"current",frontMatter:{id:"core-commands-spm",title:"Spm"},sidebar:"coreSidebar",previous:{title:"Rpi",permalink:"/core/commands/core-commands-rpi"},next:{title:"Stn",permalink:"/core/commands/core-commands-stn"}},s=[{value:"<code>spm.flash_firmware</code>",id:"spmflash_firmware",children:[]},{value:"<code>spm.help</code>",id:"spmhelp",children:[]},{value:"<code>spm.led_pwm</code>",id:"spmled_pwm",children:[]},{value:"<code>spm.manage</code>",id:"spmmanage",children:[]},{value:"<code>spm.query</code>",id:"spmquery",children:[]},{value:"<code>spm.reset</code>",id:"spmreset",children:[]}],c={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"spmflash_firmware"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.flash_firmware")),(0,l.kt)("p",null,"Flashes new SPM firmware to ATtiny."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"spmhelp"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.help")),(0,l.kt)("p",null,"Shows this help information."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"spmled_pwm"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.led_pwm")),(0,l.kt)("p",null,"Change PWM frequency and/or duty cycle for LED."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"frequency"))," (float): Change to frequency in Hz."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"duty_cycle"))," (float): Change to duty cycle in percent.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"spmmanage"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.manage")),(0,l.kt)("p",null,"Runtime management of the underlying service instance."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"SUPPORTED COMMANDS")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hook list|call <name> [argument]... [<key>=<value>]...")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"worker list|show|start|pause|resume|kill <name>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reactor list|show <name>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"run <key>=<value>..."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"EXAMPLES")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage hook list")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage hook call query_handler status")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker list *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker show *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker start *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker pause *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker resume *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage worker kill *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage reactor list")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spm.manage reactor show *")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'spm.manage run handler="query" args="[\\"status\\"]"'))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"spmquery"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.query")),(0,l.kt)("p",null,"Queries a given SPM command."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"cmd"))," (str): The SPM command to query.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"spmreset"},(0,l.kt)("inlineCode",{parentName:"h2"},"spm.reset")),(0,l.kt)("p",null,"Reset/restart ATtiny."))}u.isMDXComponent=!0}}]);