"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[2245],{24945:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/favicon-7dbd17fbde1c59c10c74d100e88248c4.ico"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}},41092:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/support_icon-9d734923a944c5b17019c3da8704fec7.png"},58162:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);const i="homeGrid_MM9h",s="cardGrid_IPp8";var o=n(74848);const a=e=>{let{children:t,home:n=!1}=e;return(0,o.jsx)("div",{className:n?i:s,children:t})}},68164:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting_started/api/command-webhook-callbacks","title":"Command Webhook Callbacks","description":"It is possible to get notified via webhook when a command completes on a device.","source":"@site/docs/getting_started/api/command-callbacks.md","sourceDirName":"getting_started/api","slug":"/getting_started/api/command-webhook-callbacks","permalink":"/getting_started/api/command-webhook-callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/getting_started/api/command-callbacks.md","tags":[],"version":"current","frontMatter":{"id":"command-webhook-callbacks","title":"Command Webhook Callbacks"},"sidebar":"sidebar","previous":{"title":"Introduction","permalink":"/getting_started/api/"},"next":{"title":"Change Device Settings from the REST API","permalink":"/getting_started/api/change-device-settings-from-api"}}');var s=n(74848),o=n(28453),a=n(58162);const c={id:"command-webhook-callbacks",title:"Command Webhook Callbacks"},r=void 0,d={},l=[{value:"Overview",id:"overview",level:3},{value:"1. Executing a Command With Callback",id:"1-executing-a-command-with-callback",level:3},{value:"2. Getting Notified by the Webhook Request.",id:"2-getting-notified-by-the-webhook-request",level:3},{value:"Verifying the Requests Using the HMAC Signature.",id:"verifying-the-requests-using-the-hmac-signature",level:4},{value:"3. Debugging: Getting Information About the Scheduled Callback",id:"3-debugging-getting-information-about-the-scheduled-callback",level:3},{value:"Let&#39;s keep in touch!",id:"lets-keep-in-touch",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"It is possible to get notified via webhook when a command completes on a device."}),"\n",(0,s.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Execute command through the API"}),"\n",(0,s.jsx)(t.li,{children:"If the device does respond, a webhook request is sent with the result of the command."}),"\n",(0,s.jsx)(t.li,{children:"If the device does not respond, it will eventually time out (default timeout: 120 seconds), and this will cause a timeout request to be sent to your server."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Note that if the device responds with a command result after the timeout, it will still send the ",(0,s.jsx)(t.code,{children:"COMMAND_EXECUTED"})," payload, even after the ",(0,s.jsx)(t.code,{children:"TIMEOUT"})," payload has been sent."]}),"\n",(0,s.jsx)(t.h3,{id:"1-executing-a-command-with-callback",children:"1. Executing a Command With Callback"}),"\n",(0,s.jsxs)(t.p,{children:["The way this works is that if you specify the ",(0,s.jsx)(t.code,{children:"callback_url"})," field when sending a request to the ",(0,s.jsx)(t.code,{children:"/dongle/devices/{id}/execute/"})," or ",(0,s.jsx)(t.code,{children:"/dongle/devices/{id}/execute_raw/"})," endpoint, the server will send a callback to the requested url when the server receives the response from the device."]}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsx)(t.p,{children:"The fields that contains the command and arguments for the two endpoints are a bit different, but the callback fields is the same for both of them."}),(0,s.jsxs)(t.p,{children:["See the difference in the autogenerated ",(0,s.jsx)(t.a,{href:"https://api.autopi.io/#/dongle/dongle_devices_execute_command",children:"API documentation"})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Request"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'POST /dongle/devices/{DEVICE_ID}/execute[_raw]/\n{\n    "command": "{COMMAND}",\n    "callback_url": "{CALLBACK_URL}",\n    "callback_timeout": 1-600 // default 120 seconds\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Response"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n    "jid": "{JOB_ID}",\n    "minions": [\n        "{UNIT_ID}"\n    ]\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"2-getting-notified-by-the-webhook-request",children:"2. Getting Notified by the Webhook Request."}),"\n",(0,s.jsx)(t.p,{children:"The request sent to your server looks like this."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'HEADERS\n{\n    \'Content-Type\': \'application/json\',\n    \'X-Request-Signature\': {HMAC_SIGNATURE},\n}\n\nBODY\n{\n    "response": {\n        "tag": "salt/job/{JOB_ID}/ret/{UNIT_ID}",\n        "data": {\n            "fun_args": [],\n            "jid": "{JOB_ID}",\n            "return": true,\n            "retcode": 0,\n            "success": true,\n            "cmd": "_return",\n            "_stamp": "2022-01-01T00:00:00.000000",\n            "fun": "{COMMAND}",\n            "id": "{UNIT_ID}"\n        }\n    },\n    "jid": "{JOB_ID}",\n    "state": "COMMAND_EXECUTED" | "TIMEOUT",\n    "success": true,\n    "device_id": {DEVICE_ID}\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"verifying-the-requests-using-the-hmac-signature",children:"Verifying the Requests Using the HMAC Signature."}),"\n",(0,s.jsxs)(t.p,{children:["The response contains a HMAC sign in the ",(0,s.jsx)(t.code,{children:"X-Request-Signature"})," header that can be used to verify the integrity of the webhook request.\nThe response json is signed with HMAC SHA-256 using the Authorization header used for executing the command (Without the 'APIToken' or 'Bearer' part)."]}),"\n",(0,s.jsx)(t.p,{children:"Example python code that verifies the request."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import hmac\nimport hashlib\n\nsecret = "API Token or JWT token without Bearer or APIToken postfix"\nwebhook_signature = "xxxxxxxxxxx"\n\njson_body = "{}"\n\ncalculated_signature = hmac.new(hmac_secret.encode(\'utf-8\'), json_body, hashlib.sha256).hexdigest()\nvalid = hmac.compare_digest(calculated_signature, webhook_signature)\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Each response always includes a unique job id, so no two request signatures are the same."})}),"\n",(0,s.jsx)(t.h3,{id:"3-debugging-getting-information-about-the-scheduled-callback",children:"3. Debugging: Getting Information About the Scheduled Callback"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"/dongle/devices/{DEVICE_ID}/callback/{JOB_ID}/"})," endpoint allows you to get the callback object from our system."]}),"\n",(0,s.jsx)(t.p,{children:"Each callback will be stored in our system for 2 days before automatically expiring."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'GET /dongle/devices/{DEVICE_ID}/callback/{JOB_ID}/\n{\n    // Contains all requests that are sent to your server, it will retry the request up to 5 times.\n    "sent_requests": [\n        {\n            "timestamp": "2022-01-01T00:00:00.000000Z",\n            "state": "COMMAND_EXECUTED",\n            "success": true,\n            "response_statuscode": 200\n        }\n    ],\n    "url": "{CALLBACK_URL}",\n    "timestamp": "2022-01-01T00:00:00.000000Z",\n    // uuid used internally for keeping track of the timeout task.\n    "timeout_task_id": "UUID",\n    // Information about the command executed\n    "command": {\n        "returner": null,\n        "command": "{COMMAND}",\n        "arg": []\n    },\n    // The timeout valud used for the callback.\n    "timeout": 60,\n    "device_id": "{DEVICE_ID}"\n}\n'})}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsx)(t.p,{children:"The response will look different based on what command was executed."}),(0,s.jsxs)(t.p,{children:["If you execute a module, the response will look like the above, but if you instead trigger a state run, like if you use want to sync the pending changes to the device ",(0,s.jsx)(t.code,{children:"state.sls pending"}),", then the response will include the whole result of the pending states that was executed."]})]}),"\n",(0,s.jsx)(t.h3,{id:"lets-keep-in-touch",children:"Let's keep in touch!"}),"\n",(0,s.jsx)(t.p,{children:"Thank you for choosing AutoPi. We're excited to see what you will achieve with your AutoPi device!"}),"\n",(0,s.jsxs)(a.A,{home:!0,children:[(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.a,{href:"https://www.autopi.io/contact/",children:[(0,s.jsx)(t.img,{src:n(24945).A+"",width:"16",height:"16"})," ",(0,s.jsx)(t.strong,{children:"Contact our sales team"})," You can build on top of AutoPi ."]})}),(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.a,{href:"https://www.autopi.io/support/",children:[(0,s.jsx)(t.img,{src:n(41092).A+"",width:"512",height:"512"})," ",(0,s.jsx)(t.strong,{children:"Get help from our support team"})," Let us know about your technical questions."]})})]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);