(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[8529],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return k}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var m=i.createContext({}),u=function(e){var t=i.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),k=l,c=d["".concat(m,".").concat(k)]||d[k]||p[k]||r;return n?i.createElement(c,a(a({ref:t},s),{},{components:n})):i.createElement(c,a({ref:t},s))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=d;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:l,a[1]=o;for(var u=2;u<r;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6835:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var i=n(2122),l=n(9756),r=(n(7294),n(3905)),a=["components"],o={id:"core-commands-minionutil",title:"Minionutil"},m=void 0,u={unversionedId:"core/commands/core-commands-minionutil",id:"core/commands/core-commands-minionutil",isDocsHomePage:!1,title:"Minionutil",description:"minionutil.change_master",source:"@site/docs/core/commands/minionutil.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-minionutil",permalink:"/core/commands/core-commands-minionutil",tags:[],version:"current",frontMatter:{id:"core-commands-minionutil",title:"Minionutil"},sidebar:"coreSidebar",previous:{title:"Log",permalink:"/core/commands/core-commands-log"},next:{title:"Obd",permalink:"/core/commands/core-commands-obd"}},s=[{value:"<code>minionutil.change_master</code>",id:"minionutilchange_master",children:[]},{value:"<code>minionutil.help</code>",id:"minionutilhelp",children:[]},{value:"<code>minionutil.last_errors</code>",id:"minionutillast_errors",children:[]},{value:"<code>minionutil.last_logs</code>",id:"minionutillast_logs",children:[]},{value:"<code>minionutil.last_startup</code>",id:"minionutillast_startup",children:[]},{value:"<code>minionutil.log_files</code>",id:"minionutillog_files",children:[]},{value:"<code>minionutil.master_status</code>",id:"minionutilmaster_status",children:[]},{value:"<code>minionutil.request_restart</code>",id:"minionutilrequest_restart",children:[]},{value:"<code>minionutil.restart</code>",id:"minionutilrestart",children:[]},{value:"<code>minionutil.run_job</code>",id:"minionutilrun_job",children:[]},{value:"<code>minionutil.status_schedule</code>",id:"minionutilstatus_schedule",children:[]},{value:"<code>minionutil.trigger_event</code>",id:"minionutiltrigger_event",children:[]},{value:"<code>minionutil.update_release</code>",id:"minionutilupdate_release",children:[]}],p={toc:s};function d(e){var t=e.components,n=(0,l.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"minionutilchange_master"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.change_master")),(0,r.kt)("p",null,"Change to different master host."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"host"))," (str): Hostname of the new master to change to.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"confirm"))," (bool): Acknowledge the execution of this command. Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilhelp"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.help")),(0,r.kt)("p",null,"Shows this help information."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutillast_errors"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.last_errors")),(0,r.kt)("p",null,"Get last errors from minion log."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"minion"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"$"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"level"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"error"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"100"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutillast_logs"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.last_logs")),(0,r.kt)("p",null,"Get last log lines from minion log."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"minion"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"$"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},".*"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"100"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutillast_startup"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.last_startup")),(0,r.kt)("p",null,"Get log lines for last startup sequence."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"minion"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"$"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"Setting up the Salt Minion"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"100"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutillog_files"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.log_files")),(0,r.kt)("p",null,"List all minion log files."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilmaster_status"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.master_status")),(0,r.kt)("p",null,"Get status of connection to master.\nImplementation originates from the ",(0,r.kt)("inlineCode",{parentName:"p"},"status.master")," command but without the logic to trigger events."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilrequest_restart"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.request_restart")),(0,r.kt)("p",null,"Request for a future restart of the minion service."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"pending"))," (bool): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"True"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"immediately"))," (bool): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"delay"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"10"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"expiration"))," (int): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"1200"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to restart. Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilrestart"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.restart")),(0,r.kt)("p",null,"Restart the minion service immediately."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to restart. Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilrun_job"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.run_job")),(0,r.kt)("p",null,"Run a job by passing it to the minion process.\nThis function makes it possible to run states and also get pillar data from external processes (engines etc.)."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilstatus_schedule"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.status_schedule")),(0,r.kt)("p",null,"Dedicated to be called from schedule and trigger minion status events."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutiltrigger_event"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.trigger_event")),(0,r.kt)("p",null,"Triggers an event on the minion event bus."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"minionutilupdate_release"},(0,r.kt)("inlineCode",{parentName:"h2"},"minionutil.update_release")),(0,r.kt)("p",null,"Update a minion to newest release by running a highstate if not already up-to-date."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"force"))," (bool): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"dry_run"))," (bool): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"only_retry"))," (bool): Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),".")))}d.isMDXComponent=!0}}]);