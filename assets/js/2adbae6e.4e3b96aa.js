(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[8508],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,c(c({ref:t},l),{},{components:r})):n.createElement(f,c({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},13919:function(e,t,r){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!n(e)}r.d(t,{b:function(){return n},Z:function(){return o}})},44996:function(e,t,r){"use strict";r.d(t,{C:function(){return i},Z:function(){return c}});var n=r(52263),o=r(13919);function i(){var e=(0,n.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,n){var i=void 0===n?{}:n,c=i.forcePrependBaseUrl,a=void 0!==c&&c,u=i.absolute,s=void 0!==u&&u;if(!r)return r;if(r.startsWith("#"))return r;if((0,o.b)(r))return r;if(a)return t+r;var l=r.startsWith(t)?r:t+r.replace(/^\//,"");return s?e+l:l}(i,r,e,t)}}}function c(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},91552:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=r(22122),o=r(19756),i=(r(67294),r(3905)),c=r(44996),a=["components"],u={id:"core-intro",title:"Introduction"},s=void 0,l={unversionedId:"core/core-intro",id:"core/core-intro",isDocsHomePage:!1,title:"Introduction",description:"This section explores the AutoPi Core system, which is one part of the AutoPi platform. The AutoPi",source:"@site/docs/core/index.mdx",sourceDirName:"core",slug:"/core/core-intro",permalink:"/core/core-intro",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/index.mdx",tags:[],version:"current",frontMatter:{id:"core-intro",title:"Introduction"},sidebar:"sidebar",previous:{title:"Accounts",permalink:"/cloud/accounts"},next:{title:"Introduction",permalink:"/core/commands/core-commands-intro"}},p=[{value:"What is AutoPi Core?",id:"what-is-autopi-core",children:[]},{value:"Links",id:"links",children:[]}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This section explores the AutoPi Core system, which is one part of the AutoPi platform. The AutoPi\nCore is an open-source software running on the hardware device. It is built on ",(0,i.kt)("a",{parentName:"p",href:"https://saltproject.io/"},"salt stack"),"."),(0,i.kt)("h2",{id:"what-is-autopi-core"},"What is AutoPi Core?"),(0,i.kt)("p",null,"The AutoPi Core is a system that runs on the AutoPi device. It includes a vast range of\nfunctionalities such as services that manage different components in the device. For example,\nthere is the ",(0,i.kt)("a",{parentName:"p",href:"/core/services/core-services-obd-manager"},"OBD service"),", which controls how the device communicates\nwith the OBD-II port of your vehicle. There is also the ",(0,i.kt)("a",{parentName:"p",href:"/core/services/core-services-tracking-manager"},"tracking service"),",\nwhich controls the GPS modem inside the device."),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:(0,c.Z)("/img/shared/gen3device_narrow.png"),alt:"AutoPi GEN3",width:"400"})),(0,i.kt)("p",null,"There are also many modules that provide a single execution commands that help to manage or work\nwith the device. Modules are separated by functionality, for example, the ",(0,i.kt)("a",{parentName:"p",href:"/core/commands/core-commands-obd"},"OBD module"),"\nprovides commands that work with the OBD-II port of your vehicle, just like the OBD service\nmentioned above. The ",(0,i.kt)("a",{parentName:"p",href:"/core/commands/core-commands-ec2x"},"ec2x module")," has commands to manage the Quectel 4G/GPS\nmodem."),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Read more about our ",(0,i.kt)("a",{parentName:"li",href:"https://autopi.io"},"product")),(0,i.kt)("li",{parentName:"ul"},"Buy the device in our ",(0,i.kt)("a",{parentName:"li",href:"https://shop.autopi.io"},"shop"))))}m.isMDXComponent=!0}}]);