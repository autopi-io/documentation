(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[1804],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return s}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=m(n),s=a,f=p["".concat(c,".").concat(s)]||p[s]||u[s]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},25481:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return d},default:function(){return p}});var r=n(22122),a=n(19756),i=(n(67294),n(3905)),o=["components"],l={id:"core-commands-rfid",title:"Rfid"},c=void 0,m={unversionedId:"core/commands/core-commands-rfid",id:"core/commands/core-commands-rfid",isDocsHomePage:!1,title:"Rfid",description:"rfid.load_settings",source:"@site/docs/core/commands/rfid.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-rfid",permalink:"/core/commands/core-commands-rfid",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/rfid.md",tags:[],version:"current",frontMatter:{id:"core-commands-rfid",title:"Rfid"},sidebar:"coreSidebar",previous:{title:"Reactor",permalink:"/core/commands/core-commands-reactor"},next:{title:"Rpi",permalink:"/core/commands/core-commands-rpi"}},d=[{value:"<code>rfid.load_settings</code>",id:"rfidload_settings",children:[]},{value:"<code>rfid.manage</code>",id:"rfidmanage",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"rfidload_settings"},(0,i.kt)("inlineCode",{parentName:"h2"},"rfid.load_settings")),(0,i.kt)("p",null,"Read the settings file stored in /opt/autopi/rfid/settings.yaml and load it."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"rfidmanage"},(0,i.kt)("inlineCode",{parentName:"h2"},"rfid.manage")),(0,i.kt)("p",null,"Runtime management of the underlying service instance."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"SUPPORTED COMMANDS")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hook list|call <name> [argument]... [<key>=<value>]...")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"worker list|show|start|pause|resume|kill <name>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"reactor list|show <name>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run <key>=<value>...")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"context [key]... [value=<value>]"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"EXAMPLES")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage hook list")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage hook call power")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker list *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker show *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker start *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker pause *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker resume *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage worker kill *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage reactor list")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage reactor show *")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage context")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rfid.manage context <context_key>"))))}p.isMDXComponent=!0}}]);