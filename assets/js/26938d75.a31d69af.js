(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[3393],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return h}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=a,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||i;return n?o.createElement(m,r(r({ref:t},u),{},{components:n})):o.createElement(m,r({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},63886:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var o=n(22122),a=n(19756),i=(n(67294),n(3905)),r=["components"],l={id:"enabling_bluetooth_on_TMU_devices",title:"Enabling Bluetooth on Devices With STN Chips"},s=void 0,c={unversionedId:"getting_started/developer_guides/enabling_bluetooth_on_TMU_devices",id:"getting_started/developer_guides/enabling_bluetooth_on_TMU_devices",isDocsHomePage:!1,title:"Enabling Bluetooth on Devices With STN Chips",description:"In this guide we will take a look at how you can enable Bluetooth for AutoPi devices that use the",source:"@site/docs/getting_started/developer_guides/enabling_bluetooth_on_TMU_devices.md",sourceDirName:"getting_started/developer_guides",slug:"/getting_started/developer_guides/enabling_bluetooth_on_TMU_devices",permalink:"/getting_started/developer_guides/enabling_bluetooth_on_TMU_devices",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/getting_started/developer_guides/enabling_bluetooth_on_TMU_devices.md",tags:[],version:"current",frontMatter:{id:"enabling_bluetooth_on_TMU_devices",title:"Enabling Bluetooth on Devices With STN Chips"},sidebar:"sidebar",previous:{title:"Installing a Camera on Your AutoPi",permalink:"/getting_started/developer_guides/installing-a-camera-on-your-autopi"},next:{title:"Setting Up a Device with Verizon Wireless",permalink:"/getting_started/developer_guides/setting-up-a-device-with-verizon-wireless"}},u=[{value:"Enabling Bluetooth",id:"enabling-bluetooth",children:[]},{value:"Direct Communication With the STN Chip",id:"direct-communication-with-the-stn-chip",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this guide we will take a look at how you can enable Bluetooth for AutoPi devices that use the\nSTN chip. By default the STN chip and Bluetooth don't work well together, so we will need to disable\nthe STN chip entirely in order to get the Bluetooth functionality to work properly and the device to\nbe kept running despite the STN chip's absence."),(0,i.kt)("h2",{id:"enabling-bluetooth"},"Enabling Bluetooth"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Disable uart_sleep"),(0,i.kt)("br",{parentName:"p"}),"\n","First, we will need to disable the STN chip's uart sleep functionality. When disabling the\nobd_manager (next step), we also disable a key heartbeat worker that keeps the device up and\nrunning by communicating to the STN chip. If the STN chip hasn't seen any communication in 15\nminutes (by default), then it will put itself and the Raspberry Pi to hibernation - we want to\navoid that. Run the following command to disable that functionality:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"$ stn.uart_sleep enable=False\n")),(0,i.kt)("div",{parentName:"li",className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If there are any power related pending syncs on the Cloud to the device you're working with the\nsettings we just changed might be reverted back to the default. We recommend that you synchronize\nall changes to your device prior to following this guide. Once the obd_manager is disabled though,\nno settings related to the STN can be changed by the Cloud."))),(0,i.kt)("p",{parentName:"li"},"You can confirm if this setting was applied correctly by running the following command and looking\nfor the uart_sleep value. It should say ",(0,i.kt)("inlineCode",{parentName:"p"},"OFF, 900 s"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"$ stn.power_config\n\n# example response\n_stamp: '2022-02-08T10:09:04.694796'\n_type: stslcs\nctrl_mode: NATIVE\next_input: LOW = SLEEP\next_sleep: ON,  LOW FOR 3000 ms\next_wake: ON,  HIGH FOR 500 ms\npwr_ctrl: LOW PWR = LOW\nuart_sleep: OFF, 900 s\nuart_wake: OFF, 0-30000 us\nvchg_wake: ON,  +2.00V IN 1000 ms\nvl_sleep: ON,  <12.20V FOR 240 s\nvl_wake: ON,  >15.50V FOR 3 s\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Disable obd_manager"),(0,i.kt)("br",{parentName:"p"}),"\n","Next, the obd_manager needs to be disabled. You can do that by going over to Device > Services\nand selecting the obd_manager entry. The page that opens up should include a tab called\n\"Settings\" - click on it. On the panel that opens up, there should be a checkbox that's called\nEnabled - uncheck that box. You don't need to synchronize the changes yet, as we will be\nmaking another change in the next step.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Enable Bluetooth"),(0,i.kt)("br",{parentName:"p"}),"\n","Finally, you need to enable Bluetooth on the device. You can do that by going over to Device >\nAdvanced Settings > Bluetooth and changing the Mode field from ",(0,i.kt)("inlineCode",{parentName:"p"},"disable")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"miniuart"),". After synchronizing\nthe changes, the Cloud will ask you to reboot the device. After the reboot you should be able to\nstart using the Bluetooth on the AutoPi. Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"bluetoothctl")," command to work with Bluetooth on\nthe device."))),(0,i.kt)("h2",{id:"direct-communication-with-the-stn-chip"},"Direct Communication With the STN Chip"),(0,i.kt)("p",null,"In case you still need to communicate with the STN chip after disabling the obd_manager, you can.\nYou need to have ",(0,i.kt)("inlineCode",{parentName:"p"},"socat")," installed in order to successfully establish a communication. You can do\nthat by typing in:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo apt update && sudo apt install -y socat\n")),(0,i.kt)("p",null,"You can connect to the STN chip with the following command. Feel free to tweak the device parameters\nto your own liking:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo socat /dev/serial0,echo=0 -\n")),(0,i.kt)("p",null,"Let's take a look at some example commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"STSLU off, off     # disables the uart_sleep functionality\nATZ                # needed in order to apply the above command's settings\nSTSLCS             # use this command to double check if the UART SLEEP value is off\n")),(0,i.kt)("p",null,"If you need to execute other commands, you will need to consult the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.obdsol.com/solutions/chips/stn2100/"},"STN chip specification"),"."))}p.isMDXComponent=!0}}]);