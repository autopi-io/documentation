"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[3883],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var s=r(96540);const d={},c=s.createContext(d);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),s.createElement(c.Provider,{value:n},e.children)}},90218:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"core/commands/core-commands-avrdude","title":"Avrdude","description":"avrdude.flash","source":"@site/docs/core/commands/avrdude.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-avrdude","permalink":"/core/commands/core-commands-avrdude","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/avrdude.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-avrdude","title":"Avrdude"},"sidebar":"sidebar","previous":{"title":"Audio","permalink":"/core/commands/core-commands-audio"},"next":{"title":"Ble","permalink":"/core/commands/core-commands-ble"}}');var d=r(74848),c=r(28453);const o={id:"core-commands-avrdude",title:"Avrdude"},i=void 0,t={},l=[{value:"<code>avrdude.flash</code>",id:"avrdudeflash",level:2},{value:"<code>avrdude.fuse</code>",id:"avrdudefuse",level:2},{value:"<code>avrdude.help</code>",id:"avrdudehelp",level:2}];function a(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"avrdudeflash",children:(0,d.jsx)(n.code,{children:"avrdude.flash"})}),"\n",(0,d.jsx)(n.p,{children:"Flash hex file to MCU."}),"\n",(0,d.jsx)(n.p,{children:"WARNING: Only use this command with caution as it can misconfigure the MCU and leave it in an unusable state."}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"hex_file"})})," (str): Path of hex file."]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"part_id"})})," (str): Part ID. Default is ",(0,d.jsx)(n.code,{children:"t88"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"prog_id"})})," (str): ID of programmer. Default is ",(0,d.jsx)(n.code,{children:"autopi"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"raise_on_error"})})," (bool): Raise an error upon failure. Default is ",(0,d.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"no_write"})})," (bool): No actual write to MCU. Default is ",(0,d.jsx)(n.code,{children:"True"}),"."]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"avrdudefuse",children:(0,d.jsx)(n.code,{children:"avrdude.fuse"})}),"\n",(0,d.jsx)(n.p,{children:"Get or set fuse value of MCU."}),"\n",(0,d.jsx)(n.p,{children:"WARNING: Only use this command with caution as it can misconfigure the MCU and leave it in an unusable state."}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"name"})})," (str): Name of the fuse."]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"part_id"})})," (str): Part ID. Default is ",(0,d.jsx)(n.code,{children:"t88"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"prog_id"})})," (str): ID of programmer. Default is ",(0,d.jsx)(n.code,{children:"autopi"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"value"})})," (str): Fuse byte value to write."]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"avrdudehelp",children:(0,d.jsx)(n.code,{children:"avrdude.help"})}),"\n",(0,d.jsx)(n.p,{children:"Shows this help information."})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}}}]);