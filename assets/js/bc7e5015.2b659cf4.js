(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[4114],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},34062:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i=["components"],s={id:"debug-raw-pid-queries",title:"Debug Raw PID Queries"},l=void 0,p={unversionedId:"cloud/obd-ii/debug-raw-pid-queries",id:"cloud/obd-ii/debug-raw-pid-queries",isDocsHomePage:!1,title:"Debug Raw PID Queries",description:"If you want to investigate the raw request and response messages of PID queries, keep reading. If",source:"@site/docs/cloud/obd-ii/debug_raw_pid_queries.mdx",sourceDirName:"cloud/obd-ii",slug:"/cloud/obd-ii/debug-raw-pid-queries",permalink:"/cloud/obd-ii/debug-raw-pid-queries",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/cloud/obd-ii/debug_raw_pid_queries.mdx",tags:[],version:"current",frontMatter:{id:"debug-raw-pid-queries",title:"Debug Raw PID Queries"},sidebar:"sidebar",previous:{title:"Create CAN Signal Loggers",permalink:"/cloud/obd-ii/create-can-signal-loggers"},next:{title:"Log Raw CAN Messages",permalink:"/cloud/obd-ii/log-raw-can-messages"}},u=[],d={toc:u};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you want to investigate the raw request and response messages of PID queries, keep reading. If\nyou are unsure of what a PID is you can start by reading\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/OBD-II_PIDs"},"this wikipedia page"),"."),(0,o.kt)("p",null,"First step is to enable debug logging on your AutoPi device:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"On ",(0,o.kt)("a",{parentName:"li",href:"https://my.autopi.io"},"my.autopi.io")," go to ",(0,o.kt)("strong",{parentName:"li"},"Device > Advanced Settings")),(0,o.kt)("li",{parentName:"ul"},"Next choose ",(0,o.kt)("strong",{parentName:"li"},"System")," and go to section ",(0,o.kt)("strong",{parentName:"li"},"Logging")," > ",(0,o.kt)("strong",{parentName:"li"},"Level")),(0,o.kt)("li",{parentName:"ul"},"Choose value ",(0,o.kt)("inlineCode",{parentName:"li"},"debug")," and press ",(0,o.kt)("em",{parentName:"li"},"Save")," (the minion process must be restarted for the change to\ntake effect)")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Debug log level or below is only recommended when needed for debugging scenarios as it consumes a\nlot of system resources. For normal operation use ",(0,o.kt)("strong",{parentName:"p"},"warning")," or ",(0,o.kt)("strong",{parentName:"p"},"info")," log level."))),(0,o.kt)("p",null,"Now that debug logging is enabled we are able to see all raw data transmitted and received between\nthe STN-chip (the chip responsible for communication with the CAN bus of the vehicle) and the\nRaspberry Pi."),(0,o.kt)("p",null,"When logged on to the system ",(0,o.kt)("a",{parentName:"p",href:"/getting_started/developer_guides/how-to-ssh-to-your-device"},"via SSH")," it is possible to\nfollow the traffic live with the following shell command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo tail -f /var/log/salt/minion | grep obd\n")),(0,o.kt)("p",null,"In the example log output below we will look at the PID query for ",(0,o.kt)("strong",{parentName:"p"},"speed"),". In order to see this\nlog output on your device it is required to have a ",(0,o.kt)("em",{parentName:"p"},"PID Logger")," setup for PID ",(0,o.kt)("strong",{parentName:"p"},"speed"),". Take a\nlook at the ",(0,o.kt)("a",{parentName:"p",href:"/cloud/obd_library/community_library"},"'Community Library'"),"\nguide on more information about how to set those up."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,874 [obd.obd          :269 ][DEBUG   ][2152] Querying command: 010D: Vehicle Speed\n2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n2020-05-19 11:16:56,913 [salt.loaded.ext.engines.obd_manager:157 ][DEBUG   ][2152] Got query result: 51 kph\n")),(0,o.kt)("p",null,"The raw request message sent from the Raspberry Pi to the STN/vehicle is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n")),(0,o.kt)("p",null,"And the raw response message sent from the STN/vehicle to the Raspberry Pi is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n")),(0,o.kt)("p",null,"If a PID is queried that is not supported by the vehicle a ",(0,o.kt)("inlineCode",{parentName:"p"},"NO DATA")," response is found instead."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In case you have any questions, don't hesitate to contact us at ",(0,o.kt)("a",{parentName:"p",href:"mailto:support@autopi.io"},"support@autopi.io"),"."))))}c.isMDXComponent=!0}}]);