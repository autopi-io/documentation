(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[7208],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return u}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=o,k=c["".concat(p,".").concat(u)]||c[u]||d[u]||a;return n?r.createElement(k,i(i({ref:t},m),{},{components:n})):r.createElement(k,i({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},11469:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),i=["components"],l={id:"core-commands-power",title:"Power"},p=void 0,s={unversionedId:"core/commands/core-commands-power",id:"core/commands/core-commands-power",isDocsHomePage:!1,title:"Power",description:"power.help",source:"@site/docs/core/commands/power.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-power",permalink:"/core/commands/core-commands-power",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/power.md",tags:[],version:"current",frontMatter:{id:"core-commands-power",title:"Power"},sidebar:"coreSidebar",previous:{title:"Openocd",permalink:"/core/commands/core-commands-openocd"},next:{title:"Qmi",permalink:"/core/commands/core-commands-qmi"}},m=[{value:"<code>power.help</code>",id:"powerhelp",children:[]},{value:"<code>power.hibernate</code>",id:"powerhibernate",children:[]},{value:"<code>power.reboot</code>",id:"powerreboot",children:[]},{value:"<code>power.request_reboot</code>",id:"powerrequest_reboot",children:[]},{value:"<code>power.restart_3v3</code>",id:"powerrestart_3v3",children:[]},{value:"<code>power.sleep</code>",id:"powersleep",children:[]},{value:"<code>power.sleep_timer</code>",id:"powersleep_timer",children:[]},{value:"<code>power.status</code>",id:"powerstatus",children:[]}],d={toc:m};function c(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"powerhelp"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.help")),(0,a.kt)("p",null,"Shows this help information."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powerhibernate"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.hibernate")),(0,a.kt)("p",null,"Power down system and put device into hibernate state."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"delay"))," (str): Delay in seconds before powering down. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"60"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"confirm"))," (bool): Acknowledge the execution of this command. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to hibernate. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powerreboot"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.reboot")),(0,a.kt)("p",null,"Reboot system immediately."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to reboot. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powerrequest_reboot"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.request_reboot")),(0,a.kt)("p",null,"Request for a future system reboot."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"pending"))," (bool): Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"True"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"immediately"))," (bool): Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to reboot. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powerrestart_3v3"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.restart_3v3")),(0,a.kt)("p",null,"Restart the 3V3 power supply. This will restart the modem and also the accelerometer the hard way."),(0,a.kt)("p",null,"WARNING: Any open serial connections to the modem (eg. in ec2x_manager and tracking_manager) may cause the system to freeze or block the TTYs and make new numbering after modem is re-initialized. It is recommended to use ",(0,a.kt)("inlineCode",{parentName:"p"},"ec2x.power_off")," to restart modem."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"confirm"))," (bool): Acknowledge the execution of this command. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why the 3V3 supply is restarted. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powersleep"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.sleep")),(0,a.kt)("p",null,"Power down system and put device into sleep state."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"interval"))," (int): Sleep interval in seconds. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"60"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"delay"))," (str): Delay in seconds before powering down. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"60"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"modem_off"))," (bool): Power off 3V3 supply to modem on mPCIe slot. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"acc_off"))," (bool): Put accelerometer into standby. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"confirm"))," (bool): Acknowledge the execution of this command. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to sleep. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powersleep_timer"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.sleep_timer")),(0,a.kt)("p",null,"Setup sleep timer to schedule power off upon inactivity."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Do not access pillar data in this function as they will not be available when called from engines (separate processes)."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"add"))," (str): Add a timer with the given name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"clear"))," (str): Clear sleep timer(s) matching the given name. Use ",(0,a.kt)("inlineCode",{parentName:"li"},"*")," to clear all."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"enable"))," (bool): Enable or disable timer. ",(0,a.kt)("strong",{parentName:"li"},"DEPRECATED"),": Use ",(0,a.kt)("inlineCode",{parentName:"li"},"add")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"clear")," instead."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"period"))," (int): Timer period in seconds before performing sleep. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"1800"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to sleep. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"unknown"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"powerstatus"},(0,a.kt)("inlineCode",{parentName:"h2"},"power.status")),(0,a.kt)("p",null,"Get status and debug information regarding power management."))}c.isMDXComponent=!0}}]);