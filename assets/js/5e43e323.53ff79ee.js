(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[4079],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(r),m=o,g=c["".concat(u,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2943:function(e,t,r){"use strict";r.d(t,{$:function(){return o}});var n=r(7294),o=function(e){var t=e.title,r=e.url;return n.createElement(n.Fragment,null,n.createElement("h2",null,"Discussion"),n.createElement("p",null,"If you'd like to discuss this topic with us or other fellow community members, you can do so on our community page dedicated for this guide: ",n.createElement("a",{href:r},t),"."),n.createElement("p",null,"You can also write us an email on ",n.createElement("a",{href:"mailto:support@autopi.io"},"support@autopi.io"),". We usually respond back in 24 hours on working days."))}},2636:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=r(2943),s=["components"],u={id:"debug-raw-pid-queries",title:"Debug Raw PID Queries"},l=void 0,p={unversionedId:"guides/obd-ii/debug-raw-pid-queries",id:"guides/obd-ii/debug-raw-pid-queries",isDocsHomePage:!1,title:"Debug Raw PID Queries",description:"If you want to investigate the raw request and response messages of PID queries, keep reading. If",source:"@site/docs/guides/obd-ii/debug_raw_pid_queries.mdx",sourceDirName:"guides/obd-ii",slug:"/guides/obd-ii/debug-raw-pid-queries",permalink:"/guides/obd-ii/debug-raw-pid-queries",tags:[],version:"current",frontMatter:{id:"debug-raw-pid-queries",title:"Debug Raw PID Queries"},sidebar:"guidesSidebar",previous:{title:"Create PID Loggers",permalink:"/guides/obd-ii/create-pid-loggers"},next:{title:"How to Import Custom DBC Files",permalink:"/guides/obd-ii/how-to-import-custom-dbc-files"}},d=[],c={toc:d};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If you want to investigate the raw request and response messages of PID queries, keep reading. If\nyou are unsure of what a PID is you can start by reading\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/OBD-II_PIDs"},"this wikipedia page"),"."),(0,i.kt)("p",null,"First step is to enable debug logging on your AutoPi device:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"On ",(0,i.kt)("a",{parentName:"li",href:"https://my.autopi.io"},"my.autopi.io")," go to ",(0,i.kt)("strong",{parentName:"li"},"Settings")," > ",(0,i.kt)("strong",{parentName:"li"},"Advanced")),(0,i.kt)("li",{parentName:"ul"},"Next choose ",(0,i.kt)("strong",{parentName:"li"},"System")," and go to section ",(0,i.kt)("strong",{parentName:"li"},"Logging")," > ",(0,i.kt)("strong",{parentName:"li"},"Level")),(0,i.kt)("li",{parentName:"ul"},"Choose value ",(0,i.kt)("inlineCode",{parentName:"li"},"debug")," and press ",(0,i.kt)("em",{parentName:"li"},"Save")," (the minion process must be restarted for the change to\ntake effect)")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Debug log level or below is only recommended when needed for debugging scenarios as it consumes a\nlot of system resources. For normal operation use ",(0,i.kt)("strong",{parentName:"p"},"warning")," or ",(0,i.kt)("strong",{parentName:"p"},"info")," log level."))),(0,i.kt)("p",null,"Now that debug logging is enabled we are able to see all raw data transmitted and received between\nthe STN-chip (the chip responsible for communication with the CAN bus of the vehicle) and the\nRaspberry Pi."),(0,i.kt)("p",null,"When logged on to the system ",(0,i.kt)("a",{parentName:"p",href:"/guides/how-to-ssh-to-your-device"},"via SSH")," it is possible to\nfollow the traffic live with the following shell command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo tail -f /var/log/salt/minion | grep obd\n")),(0,i.kt)("p",null,"In the example log output below we will look at the PID query for ",(0,i.kt)("strong",{parentName:"p"},"speed"),". In order to see this\nlog output on your device it is required to have a ",(0,i.kt)("em",{parentName:"p"},"PID Logger")," setup for PID ",(0,i.kt)("strong",{parentName:"p"},"speed"),". Take a\nlook at the ",(0,i.kt)("a",{parentName:"p",href:"/guides/obd-ii/how-to-use-the-car-explorer-feature"},"'How to Use the \"Car Explorer\" Feature'"),"\nguide on more information about how to set those up."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,874 [obd.obd          :269 ][DEBUG   ][2152] Querying command: 010D: Vehicle Speed\n2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n2020-05-19 11:16:56,913 [salt.loaded.ext.engines.obd_manager:157 ][DEBUG   ][2152] Got query result: 51 kph\n")),(0,i.kt)("p",null,"The raw request message sent from the Raspberry Pi to the STN/vehicle is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n")),(0,i.kt)("p",null,"And the raw response message sent from the STN/vehicle to the Raspberry Pi is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n")),(0,i.kt)("p",null,"If a PID is queried that is not supported by the vehicle a ",(0,i.kt)("inlineCode",{parentName:"p"},"NO DATA")," response is found instead."),(0,i.kt)(a.$,{title:"Debug Raw PID Queries",url:"https://community.autopi.io/t/guide-debug-raw-pid-queries/2034",mdxType:"Discussion"}))}m.isMDXComponent=!0}}]);