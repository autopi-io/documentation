"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[5648],{26370:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"developer_guides/local-api-overview","title":"AutoPi Local API Overview","description":"The AutoPi Local API provides a set of REST endpoints to interact with your local AutoPi device. The API is typically accessible on port 9000 of the device.","source":"@site/docs/developer_guides/local_api.md","sourceDirName":"developer_guides","slug":"/developer_guides/local-api-overview","permalink":"/developer_guides/local-api-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/developer_guides/local_api.md","tags":[],"version":"current","frontMatter":{"id":"local-api-overview","title":"AutoPi Local API Overview"},"sidebar":"sidebar","previous":{"title":"AutoPi Logs","permalink":"/developer_guides/autopi-logs"},"next":{"title":"Setting Up Docker on Your Device","permalink":"/developer_guides/setting-up-docker"}}');var l=i(74848),d=i(28453);const t={id:"local-api-overview",title:"AutoPi Local API Overview"},o="AutoPi Local API Overview",r={},c=[{value:"Authentication",id:"authentication",level:2},{value:"<code>POST /auth/login/</code>",id:"post-authlogin",level:3},{value:"Device Info",id:"device-info",level:2},{value:"<code>GET /</code>",id:"get-",level:3},{value:"<code>GET /dongle/devices/</code>",id:"get-dongledevices",level:3},{value:"Log File Download",id:"log-file-download",level:2},{value:"<code>GET /download_log/?file=&lt;filename&gt;</code>",id:"get-download_logfilefilename",level:3},{value:"Command Execution",id:"command-execution",level:2},{value:"<code>POST /dongle/&lt;unit_id&gt;/execute/</code>",id:"post-dongleunit_idexecute",level:3},{value:"<code>POST /dongle/&lt;unit_id&gt;/execute_raw/</code>",id:"post-dongleunit_idexecute_raw",level:3},{value:"Saving and applying WiFi networks",id:"saving-and-applying-wifi-networks",level:3},{value:"APN Settings",id:"apn-settings",level:2},{value:"<code>GET /dongle/&lt;unit_id&gt;/settings/apn/</code>",id:"get-dongleunit_idsettingsapn",level:3},{value:"<code>PUT /dongle/&lt;unit_id&gt;/settings/apn/</code>",id:"put-dongleunit_idsettingsapn",level:3},{value:"Error Responses",id:"error-responses",level:2}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"autopi-local-api-overview",children:"AutoPi Local API Overview"})}),"\n",(0,l.jsxs)(n.p,{children:["The AutoPi Local API provides a set of REST endpoints to interact with your local AutoPi device. The API is typically accessible on port ",(0,l.jsx)(n.code,{children:"9000"})," of the device."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,l.jsx)(n.h3,{id:"post-authlogin",children:(0,l.jsx)(n.code,{children:"POST /auth/login/"})}),"\n",(0,l.jsx)(n.p,{children:"Returns a static token and information about the local user and device."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -X POST http://<device-ip>:9000/auth/login/\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "token": "<jwt_token>",\n  "user": {\n    "pk": 0,\n    "username": "local user",\n    "has_devices": true,\n    "is_local": true,\n    "devices": [\n      {\n        "unit_id": "<uuid>",\n        "display": "Local device"\n      }\n    ],\n    "timezone": "UTC"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"device-info",children:"Device Info"}),"\n",(0,l.jsx)(n.h3,{id:"get-",children:(0,l.jsx)(n.code,{children:"GET /"})}),"\n",(0,l.jsx)(n.p,{children:"Returns the device's unique unit ID."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://<device-ip>:9000/\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "unit_id": "<uuid>"\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get-dongledevices",children:(0,l.jsx)(n.code,{children:"GET /dongle/devices/"})}),"\n",(0,l.jsx)(n.p,{children:"Returns a list of available local devices."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://<device-ip>:9000/dongle/devices/\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "unit_id": "<uuid>",\n    "display": "Local device"\n  }\n]\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"log-file-download",children:"Log File Download"}),"\n",(0,l.jsx)(n.h3,{id:"get-download_logfilefilename",children:(0,l.jsx)(n.code,{children:"GET /download_log/?file=<filename>"})}),"\n",(0,l.jsx)(n.p,{children:"Downloads a specified log file from the device."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Query Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"file"}),": Name of the log file to download (e.g., ",(0,l.jsx)(n.code,{children:"syslog"}),", ",(0,l.jsx)(n.code,{children:"salt/minion"}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -O http://<device-ip>:9000/download_log/?file=syslog\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"command-execution",children:"Command Execution"}),"\n",(0,l.jsx)(n.h3,{id:"post-dongleunit_idexecute",children:(0,l.jsx)(n.code,{children:"POST /dongle/<unit_id>/execute/"})}),"\n",(0,l.jsx)(n.p,{children:"Executes a structured command on the device."}),"\n",(0,l.jsxs)(n.admonition,{type:"tip",children:[(0,l.jsx)(n.mdxAdmonitionTitle,{}),(0,l.jsx)(n.p,{children:"The reason that you need the unit_id is because we need to make sure that the request is actually meant for that specific device when using the endpoint from another connected device, like when using the local configuration tool."}),(0,l.jsx)(n.p,{children:"The unit_id can be retrieved one of the following ways\nA.\tCalling the root route"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"GET localhost:9000\n"})}),(0,l.jsx)(n.p,{children:"B.\tReading it from the file"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"/etc/salt/minion_id\n"})})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "command": "cmd.run",\n  "arg": ["ls", "-l"],\n  "kwarg": {}\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://<device-ip>:9000/dongle/<unit_id>/execute/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{"command": "cmd.run", "arg": ["ls", "-l"], "kwarg": {}}\'\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.p,{children:"Returns the command output as JSON."}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsx)(n.p,{children:"The above commands can also be executed in raw format using the below endpoint."})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post-dongleunit_idexecute_raw",children:(0,l.jsx)(n.code,{children:"POST /dongle/<unit_id>/execute_raw/"})}),"\n",(0,l.jsx)(n.p,{children:"Executes a raw command string."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "command": "cmd.run ls -l"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://<device-ip>:9000/dongle/<unit_id>/execute_raw/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{"command": "cmd.run ls -l"}\'\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.p,{children:"Returns the command output as JSON."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"saving-and-applying-wifi-networks",children:"Saving and applying WiFi networks"}),"\n",(0,l.jsx)(n.p,{children:"To save WiFi credentials on the device:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "command": "grains.set",\n  "arg": ["wpa_supplicant:networks", [\n    { "ssid": "Network-1", "psk": "password1", "priority": 2 },\n    { "ssid": "Network-2", "psk": "password2", "priority": 1 }\n  ]],\n  "kwarg": {\n    "destructive": true,\n    "force": true\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://<device-ip>:9000/dongle/<unit_id>/execute/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "command": "grains.set",\n    "arg": ["wpa_supplicant:networks", [\n      { "ssid": "Network-1", "psk": "password1", "priority": 2 },\n      { "ssid": "Network-2", "psk": "password2", "priority": 1 }\n    ]],\n    "kwarg": { "destructive": true, "force": true }\n  }\'\n'})}),"\n",(0,l.jsx)(n.p,{children:"Then, to apply the changes and reconfigure the WiFi service:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "command": "state.sls",\n  "arg": ["network.wlan.client.config"],\n  "kwarg": {}\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://<device-ip>:9000/dongle/<unit_id>/execute/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "command": "state.sls",\n    "arg": ["network.wlan.client.config"],\n    "kwarg": {}\n  }\'\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"apn-settings",children:"APN Settings"}),"\n",(0,l.jsx)(n.h3,{id:"get-dongleunit_idsettingsapn",children:(0,l.jsx)(n.code,{children:"GET /dongle/<unit_id>/settings/apn/"})}),"\n",(0,l.jsx)(n.p,{children:"Retrieves current APN settings."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://<device-ip>:9000/dongle/<unit_id>/settings/apn/\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "apn": "internet",\n  "user": "user",\n  "pass": "pass",\n  "pin": "0000",\n  "mtu": 1280\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"put-dongleunit_idsettingsapn",children:(0,l.jsx)(n.code,{children:"PUT /dongle/<unit_id>/settings/apn/"})}),"\n",(0,l.jsx)(n.p,{children:"Updates the APN configuration."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "apn": "internet",\n  "user": "user",\n  "pass": "pass",\n  "pin": "0000",\n  "mtu": 1280\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X PUT http://<device-ip>:9000/dongle/<unit_id>/settings/apn/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{"apn": "internet", "user": "user", "pass": "pass", "pin": "0000", "mtu": 1280}\'\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.p,{children:"Returns the updated APN configuration."}),"\n",(0,l.jsx)(n.p,{children:"Then, to apply the changes and reconfigure the QMI service:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "command": "state.sls",\n  "arg": ["network.wwan.qmi.config"],\n  "kwarg": {}\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Curl Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://<device-ip>:9000/dongle/<unit_id>/execute/ \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "command": "state.sls",\n    "arg": ["network.wwan.qmi.config"],\n    "kwarg": {}\n  }\'\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,l.jsx)(n.p,{children:"All endpoints return structured error responses if something goes wrong."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "error": "unit_id does not match the id configured on this device"\n}\n'})}),"\n",(0,l.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(96540);const l={},d=s.createContext(l);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);