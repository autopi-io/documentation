(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[9804],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=l(n),d=o,y=s["".concat(p,".").concat(d)]||s[d]||m[d]||c;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=s;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2670:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return s}});var r=n(2122),o=n(9756),c=(n(7294),n(3905)),i=["components"],a={id:"core-commands-crypto",title:"Crypto"},p=void 0,l={unversionedId:"core/commands/core-commands-crypto",id:"core/commands/core-commands-crypto",isDocsHomePage:!1,title:"Crypto",description:"crypto.generate_key",source:"@site/docs/core/commands/crypto.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-crypto",permalink:"/core/commands/core-commands-crypto",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/crypto.md",tags:[],version:"current",frontMatter:{id:"core-commands-crypto",title:"Crypto"}},u=[{value:"<code>crypto.generate_key</code>",id:"cryptogenerate_key",children:[]},{value:"<code>crypto.help</code>",id:"cryptohelp",children:[]},{value:"<code>crypto.query</code>",id:"cryptoquery",children:[]},{value:"<code>crypto.sign_string</code>",id:"cryptosign_string",children:[]}],m={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"cryptogenerate_key"},(0,c.kt)("inlineCode",{parentName:"h2"},"crypto.generate_key")),(0,c.kt)("p",null,"Generates a new key in the Secure Element"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("strong",{parentName:"li"},(0,c.kt)("inlineCode",{parentName:"strong"},"keyid"))," (str/int): key`s id")),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"cryptohelp"},(0,c.kt)("inlineCode",{parentName:"h2"},"crypto.help")),(0,c.kt)("p",null,"Shows this help information."),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"cryptoquery"},(0,c.kt)("inlineCode",{parentName:"h2"},"crypto.query")),(0,c.kt)("p",null,"Queries a given SPM command."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("strong",{parentName:"li"},(0,c.kt)("inlineCode",{parentName:"strong"},"cmd"))," (str): The SPM command to query.")),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"cryptosign_string"},(0,c.kt)("inlineCode",{parentName:"h2"},"crypto.sign_string")),(0,c.kt)("p",null,"Signs a given string using the Secure Element"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("strong",{parentName:"li"},(0,c.kt)("inlineCode",{parentName:"strong"},"data"))," (str): String to be signed"),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("strong",{parentName:"li"},(0,c.kt)("inlineCode",{parentName:"strong"},"keyid"))," (str/int): key`s id")))}s.isMDXComponent=!0}}]);