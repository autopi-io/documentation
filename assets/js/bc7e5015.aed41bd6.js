"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[6219],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var o=i(96540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},68326:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"cloud/obd-ii/debug-raw-pid-queries","title":"Debug Raw PID Queries","description":"If you want to investigate the raw request and response messages of PID queries, keep reading. If","source":"@site/docs/cloud/obd-ii/debug_raw_pid_queries.mdx","sourceDirName":"cloud/obd-ii","slug":"/cloud/obd-ii/debug-raw-pid-queries","permalink":"/cloud/obd-ii/debug-raw-pid-queries","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/cloud/obd-ii/debug_raw_pid_queries.mdx","tags":[],"version":"current","frontMatter":{"id":"debug-raw-pid-queries","title":"Debug Raw PID Queries"},"sidebar":"sidebar","previous":{"title":"Create CAN Signal Loggers","permalink":"/cloud/obd-ii/create-can-signal-loggers"},"next":{"title":"Log Raw CAN Messages","permalink":"/cloud/obd-ii/log-raw-can-messages"}}');var t=i(74848),s=i(28453);const r={id:"debug-raw-pid-queries",title:"Debug Raw PID Queries"},a=void 0,d={},l=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["If you want to investigate the raw request and response messages of PID queries, keep reading. If\nyou are unsure of what a PID is you can start by reading\n",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/OBD-II_PIDs",children:"this wikipedia page"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["First step is to enable debug logging on your ",(0,t.jsx)(n.a,{href:"https://www.autopi.io",children:"AutoPi"})," device:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["On ",(0,t.jsx)(n.a,{href:"https://my.autopi.io",children:"my.autopi.io"})," go to ",(0,t.jsx)(n.strong,{children:"Device > Advanced Settings"})]}),"\n",(0,t.jsxs)(n.li,{children:["Next choose ",(0,t.jsx)(n.strong,{children:"System"})," and go to section ",(0,t.jsx)(n.strong,{children:"Logging"})," > ",(0,t.jsx)(n.strong,{children:"Level"})]}),"\n",(0,t.jsxs)(n.li,{children:["Choose value ",(0,t.jsx)(n.code,{children:"debug"})," and press ",(0,t.jsx)(n.em,{children:"Save"})," (the minion process must be restarted for the change to\ntake effect)"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Debug log level or below is only recommended when needed for debugging scenarios as it consumes a\nlot of system resources. For normal operation use ",(0,t.jsx)(n.strong,{children:"warning"})," or ",(0,t.jsx)(n.strong,{children:"info"})," log level."]})}),"\n",(0,t.jsxs)(n.p,{children:["Now that debug logging is enabled we are able to see all raw data transmitted and received between\nthe STN-chip (the chip responsible for communication with the ",(0,t.jsx)(n.a,{href:"https://www.autopi.io/hardware/autopi-canfd-pro",children:"CAN"})," bus of the vehicle) and the\nRaspberry Pi."]}),"\n",(0,t.jsxs)(n.p,{children:["When logged on to the system ",(0,t.jsx)(n.a,{href:"/developer_guides/how-to-ssh-to-your-device",children:"via SSH"})," it is possible to\nfollow the traffic live with the following shell command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /var/log/salt/minion | grep obd\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example log output below we will look at the PID query for ",(0,t.jsx)(n.strong,{children:"speed"}),". In order to see this\nlog output on your device it is required to have a ",(0,t.jsx)(n.em,{children:"PID Logger"})," setup for PID ",(0,t.jsx)(n.strong,{children:"speed"}),". Take a\nlook at the ",(0,t.jsx)(n.a,{href:"/cloud/obd_library/community_library",children:"'Community Library'"}),"\nguide on more information about how to set those up."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"2020-05-19 11:16:56,874 [obd.obd          :269 ][DEBUG   ][2152] Querying command: 010D: Vehicle Speed\n2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n2020-05-19 11:16:56,913 [salt.loaded.ext.engines.obd_manager:157 ][DEBUG   ][2152] Got query result: 51 kph\n"})}),"\n",(0,t.jsx)(n.p,{children:"The raw request message sent from the Raspberry Pi to the STN/vehicle is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"2020-05-19 11:16:56,875 [obd.interfaces.elm327:1027][DEBUG   ][2152] Write: '010D\\r'\n"})}),"\n",(0,t.jsx)(n.p,{children:"And the raw response message sent from the STN/vehicle to the Raspberry Pi is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"2020-05-19 11:16:56,909 [obd.interfaces.elm327:1082][DEBUG   ][2152] Read: b'7E8 03 41 0D 33 \\r\\r>'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If a PID is queried that is not supported by the vehicle a ",(0,t.jsx)(n.code,{children:"NO DATA"})," response is found instead."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In case you have any questions, don't hesitate to contact us at ",(0,t.jsx)(n.a,{href:"mailto:support@autopi.io",children:"support@autopi.io"}),"."]})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);