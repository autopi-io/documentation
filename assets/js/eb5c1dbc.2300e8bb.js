"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[4008],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var r=n(96540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}},47605:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"core/services/core-services-modem-manager","title":"Modem Manager","description":"Handlers","source":"@site/docs/core/services/modem_manager.md","sourceDirName":"core/services","slug":"/core/services/core-services-modem-manager","permalink":"/core/services/core-services-modem-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/services/modem_manager.md","tags":[],"version":"current","frontMatter":{"id":"core-services-modem-manager","title":"Modem Manager"},"sidebar":"sidebar","previous":{"title":"Key Fob Manager","permalink":"/core/services/core-services-key-fob-manager"},"next":{"title":"Obd Manager","permalink":"/core/services/core-services-obd-manager"}}');var t=n(74848),o=n(28453);const i={id:"core-services-modem-manager",title:"Modem Manager"},l=void 0,d={},a=[{value:"Handlers",id:"handlers",level:2},{value:"<code>connection</code>",id:"connection",level:3},{value:"<code>read_sms</code>",id:"read_sms",level:3},{value:"<code>reset</code>",id:"reset",level:3}];function c(e){const s={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"handlers",children:"Handlers"}),"\n",(0,t.jsx)(s.h3,{id:"connection",children:(0,t.jsx)(s.code,{children:"connection"})}),"\n",(0,t.jsx)(s.p,{children:"Queries a given connection class command."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"ARGUMENTS"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"cmd"})})," (str): The command to query."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"read_sms",children:(0,t.jsx)(s.code,{children:"read_sms"})}),"\n",(0,t.jsxs)(s.p,{children:["Reads SMS messages stored in the modem and optionally processes them into ",(0,t.jsx)(s.code,{children:"system/sms/received"})," events.\nThose events hold information such as the timestamp of the message (when it was received by the\nmodem), the sender and the text."]}),"\n",(0,t.jsx)(s.p,{children:"Optional parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'status (str): The status of the messages that are to be returned. Look below for avalable options. Default: "ALL".'}),"\n",(0,t.jsx)(s.li,{children:"clear (bool): Should the returned messages be removed from the modem as well?"}),"\n",(0,t.jsx)(s.li,{children:'format_mode (str): The format in which the messages should be processed. Currently, only TXT mode is supported. Default: "TXT".'}),"\n",(0,t.jsx)(s.li,{children:"trigger_events (bool): Should the handler trigger SMS events? Default: False"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Available options (status):"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'"REC UNREAD" - new messages'}),"\n",(0,t.jsx)(s.li,{children:'"REC READ" - read messages'}),"\n",(0,t.jsx)(s.li,{children:'"STO UNSENT" - stored messages not sent yet'}),"\n",(0,t.jsx)(s.li,{children:'"STO SENT" - stored messages already sent'}),"\n",(0,t.jsx)(s.li,{children:'"ALL" - all messages'}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"reset",children:(0,t.jsx)(s.code,{children:"reset"})}),"\n",(0,t.jsx)(s.p,{children:"Enable or disable the one shot or periodic unit reset."}),"\n",(0,t.jsx)(s.p,{children:"Optional parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"mode (string): The mode in which to operate the command. For available values, look below. Default: None."}),"\n",(0,t.jsx)(s.li,{children:"delay (number): Time interval in minutes after that the unit reboots. Default: 0."}),"\n",(0,t.jsx)(s.li,{children:'reason (str): The reason the reset was performed. Default: "unspecified".'}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Available modes:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"disabled: Disables unit reset."}),"\n",(0,t.jsx)(s.li,{children:"one_shot: Enables the unit reset only one time (one shot reset)."}),"\n",(0,t.jsx)(s.li,{children:"periodic: Enables periodic resets of the unit."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);