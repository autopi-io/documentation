"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[8153],{28453:(e,s,c)=>{c.d(s,{R:()=>d,x:()=>o});var n=c(96540);const t={},i=n.createContext(t);function d(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:s},e.children)}},89502:(e,s,c)=>{c.r(s),c.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>a,frontMatter:()=>d,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"core/commands/core-commands-usbutil","title":"Usbutil","description":"usbutil.checkexpecteddevices","source":"@site/docs/core/commands/usbutil.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-usbutil","permalink":"/core/commands/core-commands-usbutil","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/usbutil.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-usbutil","title":"Usbutil"},"sidebar":"sidebar","previous":{"title":"Tracking","permalink":"/core/commands/core-commands-tracking"},"next":{"title":"Wifi","permalink":"/core/commands/core-commands-wifi"}}');var t=c(74848),i=c(28453);const d={id:"core-commands-usbutil",title:"Usbutil"},o=void 0,r={},u=[{value:"<code>usbutil.check_expected_devices</code>",id:"usbutilcheck_expected_devices",level:2},{value:"<code>usbutil.devices</code>",id:"usbutildevices",level:2},{value:"<code>usbutil.devices_changed_trigger</code>",id:"usbutildevices_changed_trigger",level:2},{value:"<code>usbutil.help</code>",id:"usbutilhelp",level:2}];function l(e){const s={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"usbutilcheck_expected_devices",children:(0,t.jsx)(s.code,{children:"usbutil.check_expected_devices"})}),"\n",(0,t.jsxs)(s.p,{children:["Triggers ",(0,t.jsx)(s.code,{children:"system/usb/<vendor>/<product>/not_connected"})," events when specified (must be present) devices\nare missing, i.e. not seen for whatever reason when running the ",(0,t.jsx)(s.code,{children:"usbutil.devices"})," command."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"usbutildevices",children:(0,t.jsx)(s.code,{children:"usbutil.devices"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the lsusb bash command result as a list of dictionaries, each dict is a separete device.\nAn example dict structure is presented below:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["bus: ",(0,t.jsx)(s.code,{children:"001"}),"                          # the linux system bus number\ndevice: ",(0,t.jsx)(s.code,{children:"001"}),"                       # the linux system device number\nname: Linux Foundation 2.0 root hub # the name of the device\nproduct: ",(0,t.jsx)(s.code,{children:"0002"}),"                     # the product number (hex) of the device\nvendor: 1d6b                        # the vendor number (hex) of the device"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"usbutildevices_changed_trigger",children:(0,t.jsx)(s.code,{children:"usbutil.devices_changed_trigger"})}),"\n",(0,t.jsxs)(s.p,{children:["Triggers ",(0,t.jsx)(s.code,{children:"system/usb/<vendor>/<product>/connected"})," and ",(0,t.jsx)(s.code,{children:"system/usb/<vendor>/<product>/disconnected"}),"\nevents when USB devices are connected or disconnected."]}),"\n",(0,t.jsxs)(s.p,{children:["Expects the result to be in the format as ",(0,t.jsx)(s.code,{children:"usbutil.devices"})," return format."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"usbutilhelp",children:(0,t.jsx)(s.code,{children:"usbutil.help"})}),"\n",(0,t.jsx)(s.p,{children:"Shows this help information."})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);