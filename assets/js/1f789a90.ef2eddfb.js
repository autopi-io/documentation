"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[5182],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var r=s(96540);const i={},l=r.createContext(i);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(l.Provider,{value:n},e.children)}},88160:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>x,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"core/commands/core-commands-log","title":"Log","description":"log.help","source":"@site/docs/core/commands/log.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-log","permalink":"/core/commands/core-commands-log","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/log.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-log","title":"Log"},"sidebar":"sidebar","previous":{"title":"Keyfob","permalink":"/core/commands/core-commands-keyfob"},"next":{"title":"Minionutil","permalink":"/core/commands/core-commands-minionutil"}}');var i=s(74848),l=s(28453);const o={id:"core-commands-log",title:"Log"},t=void 0,c={},d=[{value:"<code>log.help</code>",id:"loghelp",level:2},{value:"<code>log.journalctl</code>",id:"logjournalctl",level:2},{value:"<code>log.kernel</code>",id:"logkernel",level:2},{value:"<code>log.kernel_iter</code>",id:"logkernel_iter",level:2},{value:"<code>log.query</code>",id:"logquery",level:2}];function h(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"loghelp",children:(0,i.jsx)(n.code,{children:"log.help"})}),"\n",(0,i.jsx)(n.p,{children:"Shows this help information."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"logjournalctl",children:(0,i.jsx)(n.code,{children:"log.journalctl"})}),"\n",(0,i.jsx)(n.p,{children:"Retrive log files for either kernel, system or salt-minion."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"log"})})," (str): The log you want to retrieve."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"minutes"})})," (int): Specifies time delimiter on report retrival, time now minus minutes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"days"})})," (int): Overwrites minutes to days date minus days."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lines"})})," (int): Specifies the maximum number of lines returned."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"grep"})})," (str): Match expressions and delimit output string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"matched_lines"})})," (int): Amount of lines returned after grep pattern context."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"boot"})})," (int): Fetches boot records from journal using offset; positive starting from the first boot, non-positive starting from the last boot, -0 or no number for current boot."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"logkernel",children:(0,i.jsx)(n.code,{children:"log.kernel"})}),"\n",(0,i.jsx)(n.p,{children:"Print and/or clear the kernel ring buffer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"level"})})," (str): Restict output the the given level and higher. Default is ",(0,i.jsx)(n.code,{children:"err"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"facilities"})})," (str): Restrict output to the given list (comma-separated) of facilities."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"offset"})})," (str): Offset regex to begin from."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"clear"})})," (bool): Clear after reading."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"logkernel_iter",children:(0,i.jsx)(n.code,{children:"log.kernel_iter"})}),"\n",(0,i.jsx)(n.p,{children:"Helper function to retrieve new kernel log entries (based on cached offset value)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"level"})})," (str): Restict output the the given level and higher. Default is ",(0,i.jsx)(n.code,{children:"err"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"facilities"})})," (str): Restrict output to the given list (comma-separated) of facilities."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"offset_key"})})," (str): Key to get value from result and use as offset. Default is ",(0,i.jsx)(n.code,{children:"timestamp"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"reset"})})," (bool): Reset cached offset value and start over."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"logquery",children:(0,i.jsx)(n.code,{children:"log.query"})}),"\n",(0,i.jsx)(n.p,{children:"Query a log file or any text file."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"file"})})," (str): Path of log file."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"begin"})})," (str): Default is ",(0,i.jsx)(n.code,{children:"^"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"end"})})," (str): Default is ",(0,i.jsx)(n.code,{children:"$"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"match"})})," (str): Default is ",(0,i.jsx)(n.code,{children:".*"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"count"})})," (int): Default is ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"reverse"})})," (bool): Default is ",(0,i.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"before"})})," (int): Default is ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"after"})})," (int): Default is ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"first"})})," (int): Default is ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"last"})})," (int): Default is ",(0,i.jsx)(n.code,{children:"100"}),"."]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);