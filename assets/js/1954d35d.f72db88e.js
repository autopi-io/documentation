"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[818],{28453:(e,n,l)=>{l.d(n,{R:()=>o,x:()=>d});var s=l(96540);const r={},c=s.createContext(r);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(c.Provider,{value:n},e.children)}},86743:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"core/commands/core-commands-logger","title":"Logger","description":"logger.call","source":"@site/docs/core/commands/logger.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-logger","permalink":"/core/commands/core-commands-logger","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/logger.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-logger","title":"Logger"}}');var r=l(74848),c=l(28453);const o={id:"core-commands-logger",title:"Logger"},d=void 0,i={},t=[{value:"<code>logger.call</code>",id:"loggercall",level:2},{value:"<code>logger.channel</code>",id:"loggerchannel",level:2},{value:"<code>logger.channel_namespaces</code>",id:"loggerchannel_namespaces",level:2},{value:"<code>logger.channels</code>",id:"loggerchannels",level:2},{value:"<code>logger.disk</code>",id:"loggerdisk",level:2},{value:"<code>logger.disks</code>",id:"loggerdisks",level:2},{value:"<code>logger.help</code>",id:"loggerhelp",level:2},{value:"<code>logger.status</code>",id:"loggerstatus",level:2}];function h(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"loggercall",children:(0,r.jsx)(n.code,{children:"logger.call"})}),"\n",(0,r.jsx)(n.p,{children:"Helper command to call handlers or workflows on different engines/services identified by their namespace."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"namespace"})})," (str): The namespace of the engine/service to call."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"handler/workflow"})})," (str): Name of the handler or workflow to call."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"*args"})})," (str): The argument(s) to pass to the handler or workflow."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"EXAMPLES"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"logger.call can0 manage context"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"logger.call can0 obd_query rpm"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"logger.call can0_decoder manage worker list"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerchannel",children:(0,r.jsx)(n.code,{children:"logger.channel"})}),"\n",(0,r.jsxs)(n.p,{children:["Alias for the ",(0,r.jsx)(n.code,{children:"logger.channels"})," command."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerchannel_namespaces",children:(0,r.jsx)(n.code,{children:"logger.channel_namespaces"})}),"\n",(0,r.jsx)(n.p,{children:"Returns available namespaces grouped by the channel they belong to."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"*only"})})," (str): The channel(s) to include in the result. If none defined all channels are included."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerchannels",children:(0,r.jsx)(n.code,{children:"logger.channels"})}),"\n",(0,r.jsx)(n.p,{children:"Returns details of all channels available for this device."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"*only"})})," (str): The channel(s) to include in the result. If none defined all channels are included."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"verbose"})})," (bool): Include more details in the result? Default value is ",(0,r.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerdisk",children:(0,r.jsx)(n.code,{children:"logger.disk"})}),"\n",(0,r.jsxs)(n.p,{children:["Alias for the ",(0,r.jsx)(n.code,{children:"logger.disks"})," command."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerdisks",children:(0,r.jsx)(n.code,{children:"logger.disks"})}),"\n",(0,r.jsx)(n.p,{children:"Returns details of all disks available for this device."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"verbose"})})," (bool): Include more details in the result? Default value is ",(0,r.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerhelp",children:(0,r.jsx)(n.code,{children:"logger.help"})}),"\n",(0,r.jsx)(n.p,{children:"Shows this help information."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"loggerstatus",children:(0,r.jsx)(n.code,{children:"logger.status"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns a status overview of all channels and disks available for this device.\nThis command is just a composite result of the two commands ",(0,r.jsx)(n.code,{children:"logger.channels"})," and ",(0,r.jsx)(n.code,{children:"logger.disks"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"verbose"})})," (bool): Include more details in the result? Default value is ",(0,r.jsx)(n.code,{children:"False"}),"."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);