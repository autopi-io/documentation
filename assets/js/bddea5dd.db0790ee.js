"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[2518],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},42231:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"developer_guides/how-to-create-custom-event-for-custom-logger","title":"How to Create a Custom Event for Your Custom Logger","description":"---","source":"@site/docs/developer_guides/how_to_create_custom_event.md","sourceDirName":"developer_guides","slug":"/developer_guides/how-to-create-custom-event-for-custom-logger","permalink":"/developer_guides/how-to-create-custom-event-for-custom-logger","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/developer_guides/how_to_create_custom_event.md","tags":[],"version":"current","frontMatter":{"id":"how-to-create-custom-event-for-custom-logger","title":"How to Create a Custom Event for Your Custom Logger","supportedDevices":["cm4"]},"sidebar":"sidebar","previous":{"title":"Setting Up Docker on Your Device","permalink":"/developer_guides/setting-up-docker"},"next":{"title":"Using the AutoPi With an External Power Supply","permalink":"/developer_guides/using-the-autopi-with-an-external-power-supply"}}');var r=n(74848),o=n(28453),s=(n(58162),n(47886));const a={id:"how-to-create-custom-event-for-custom-logger",title:"How to Create a Custom Event for Your Custom Logger",supportedDevices:["cm4"]},l=void 0,c={},d=[{value:"Step 1: Create a Custom Execution Script",id:"step-1-create-a-custom-execution-script",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Step 2: Add the Script as a Trigger in the OBD Manager",id:"step-2-add-the-script-as-a-trigger-in-the-obd-manager",level:2},{value:"Step 3: Assign the Trigger to a Logger",id:"step-3-assign-the-trigger-to-a-logger",level:2}];function g(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.A,{supported:a.supportedDevices}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"This guide walks you through creating a custom event for your own logger script. This is useful when you want your AutoPi device to react to specific conditions like determining when a trip has started or ended based on your own parameters."}),"\n",(0,r.jsx)(t.p,{children:"We'll go step-by-step through:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Creating a custom execution script"}),"\n",(0,r.jsx)(t.li,{children:"Hooking it into the OBD Manager"}),"\n",(0,r.jsx)(t.li,{children:"Enabling it on a CAN logger"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"step-1-create-a-custom-execution-script",children:"Step 1: Create a Custom Execution Script"}),"\n",(0,r.jsxs)(t.p,{children:["Start by creating a new custom module. In this example, we\u2019ll call it ",(0,r.jsx)(t.code,{children:"custom_event"}),"."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Navigate to Devices and click on the device you want this change to be applied to."}),"\n",(0,r.jsxs)(t.li,{children:['Click on Custom Code tab and click "Create".\n',(0,r.jsx)(t.img,{alt:"Custom Code tab",src:n(79092).A+"",width:"1702",height:"904"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Here\u2019s what the script looks like:\n",(0,r.jsx)(t.img,{alt:"Custom Code creation",src:n(60518).A+"",width:"1535",height:"1059"})]}),"\n",(0,r.jsx)(t.p,{children:"Here is the code example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import\xa0logging\n  \nlog\xa0=\xa0logging.getLogger(__name__)\n  \ndef\xa0trigger(res):\n\xa0\xa0\xa0\xa0if\xa0not\xa0isinstance(res,\xa0dict):\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0return\xa0\n\xa0\xa0\xa0\xa0for\xa0logger_output\xa0in\xa0res[\'values\']:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if\xa0logger_output[\'_type\']\xa0==\xa0"pack_sum_voltage":\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0trigger_val\xa0=\xa0None\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if\xa0logger_output["value"]\xa0>\xa0400:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0trigger_val\xa0=\xa0"nominal"\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0else:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0trigger_val\xa0=\xa0"low"\n  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0__salt__["minionutil.trigger_event"]("vehicle/hv_battery/voltage/{}".format(trigger_val),\xa0data=(dict({"value":\xa0logger_output[\'value\']},\xa0**{"_alternating_cache_event_filter.skip":\xa0True})))\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0log.info("Triggered event {:}".format(trigger_val))\n\xa0\xa0\xa0\xa0return\xa0None\n'})}),"\n",(0,r.jsx)(t.h3,{id:"explanation",children:"Explanation"}),"\n",(0,r.jsx)(t.p,{children:"You have created a new function that is called trigger, and it takes one input argument res."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"res"})," is a dictionary passed from the ",(0,r.jsx)(t.code,{children:"obd.manager"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["The _type attribute of the res dict is the name of the logger we want to react to. Here you can set up some conditionals for 2 different event types:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Preferably, limit the event types to limit the amount of indexing elastic_search has to do."}),"\n",(0,r.jsx)(t.li,{children:"The data parameter will usually be the data we react to - which is the value parameter of the logger_output we are looking at."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"We use the alternating_cache_event_filter.skip to ensure that we limit the amount of events, if the events do no change."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"step-2-add-the-script-as-a-trigger-in-the-obd-manager",children:"Step 2: Add the Script as a Trigger in the OBD Manager"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Navigate to Services tab."}),"\n",(0,r.jsx)(t.li,{children:"Select OBD Manager."}),"\n",(0,r.jsx)(t.li,{children:"Navigate to the Hooks tab."}),"\n",(0,r.jsx)(t.li,{children:"Click Create Hook."}),"\n",(0,r.jsxs)(t.li,{children:["Fill in the fields:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Name: Choose a descriptive name (e.g., event_trigger)"}),"\n",(0,r.jsx)(t.li,{children:"Type: Select trigger from the dropdown"}),"\n",(0,r.jsx)(t.li,{children:"Function: Use the format custom_event.trigger"}),"\n",(0,r.jsx)(t.li,{children:"Enabled: Make sure this toggle is turned on"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"Click Save."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Create Hook event_trigger",src:n(52260).A+"",width:"1187",height:"564"})}),"\n",(0,r.jsx)(t.h2,{id:"step-3-assign-the-trigger-to-a-logger",children:"Step 3: Assign the Trigger to a Logger"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Navigate to the Workers tab."}),"\n",(0,r.jsx)(t.li,{children:"Select the CAN Logger you want to apply the trigger to."}),"\n",(0,r.jsx)(t.li,{children:"In the logger settings, find the Trigger dropdown."}),"\n",(0,r.jsx)(t.li,{children:"Select your newly created trigger (e.g., event_trigger)."}),"\n",(0,r.jsx)(t.li,{children:"If your new trigger doesn't appear immediately, try clearing any pending syncs and refreshing the page."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Create Worker can_logger_1",src:n(55455).A+"",width:"1056",height:"669"})}),"\n",(0,r.jsx)(t.p,{children:"You now have a custom trigger configured for your custom logger. Your AutoPi device will automatically evaluate the logger output and trigger events based on your defined conditions."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},47886:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var i=n(74848);const r={mini:{name:"Mini",image:"/img/hardware/autopi_mini/AutoPi_Mini_5_Top_right.png"},cm4:{name:"TMU CM4",image:"/img/hardware/autopi_tmu_cm4/TMU_Floating_Topside_V1_scaled.png"},pro:{name:"CAN-FD Pro",image:"/img/hardware/autopi_canfd_pro/canfd_pro_trans.png"}};function o(e){let{supported:t}=e;return t?.length?(0,i.jsxs)("div",{style:{padding:"1rem",marginBottom:"1.5rem"},children:[(0,i.jsx)("strong",{children:"This guide is applicable to the following device/ devices:"}),(0,i.jsx)("div",{style:{display:"flex",gap:"1.5rem",marginTop:"0.5rem"},children:t.map((e=>{const t=r[e];return(0,i.jsxs)("div",{style:{textAlign:"center"},children:[(0,i.jsx)("img",{src:t.image,alt:t.name,style:{height:"60px",marginBottom:"0.25rem"}}),(0,i.jsx)("div",{children:t.name})]},e)}))})]}):null}},52260:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create_hook-8ab2b9fe650ba27fff6957b29be05ef2.png"},55455:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create_worker-a3f91b63323f252003bc1530207c2050.png"},58162:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);const i="homeGrid_MM9h",r="cardGrid_IPp8";var o=n(74848);const s=e=>{let{children:t,home:n=!1}=e;return(0,o.jsx)("div",{className:n?i:r,children:t})}},60518:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create_custom_code-a66599e5be77e4805f23651cd56abef9.png"},79092:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/custom_event-c68dba648a5e15ae365b02f15d03b20f.png"}}]);