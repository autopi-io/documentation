"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[1563],{28453:(e,o,n)=>{n.d(o,{R:()=>t,x:()=>d});var r=n(96540);const c={},s=r.createContext(c);function t(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),r.createElement(s.Provider,{value:o},e.children)}},49761:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>m,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core/commands/core-commands-openocd","title":"Openocd","description":"openocd.help","source":"@site/docs/core/commands/openocd.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-openocd","permalink":"/core/commands/core-commands-openocd","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/openocd.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-openocd","title":"Openocd"},"sidebar":"sidebar","previous":{"title":"Obd","permalink":"/core/commands/core-commands-obd"},"next":{"title":"Power","permalink":"/core/commands/core-commands-power"}}');var c=n(74848),s=n(28453);const t={id:"core-commands-openocd",title:"Openocd"},d=void 0,i={},l=[{value:"<code>openocd.help</code>",id:"openocdhelp",level:2},{value:"<code>openocd.program</code>",id:"openocdprogram",level:2}];function a(e){const o={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(o.h2,{id:"openocdhelp",children:(0,c.jsx)(o.code,{children:"openocd.help"})}),"\n",(0,c.jsx)(o.p,{children:"Shows this help information."}),"\n",(0,c.jsx)(o.hr,{}),"\n",(0,c.jsx)(o.h2,{id:"openocdprogram",children:(0,c.jsx)(o.code,{children:"openocd.program"})}),"\n",(0,c.jsx)(o.p,{children:"Loads a program onto a MCU."}),"\n",(0,c.jsx)(o.p,{children:(0,c.jsx)(o.strong,{children:"ARGUMENTS"})}),"\n",(0,c.jsxs)(o.ul,{children:["\n",(0,c.jsxs)(o.li,{children:[(0,c.jsx)(o.strong,{children:(0,c.jsx)(o.code,{children:"file"})})," (str): Path of program binary file."]}),"\n",(0,c.jsxs)(o.li,{children:[(0,c.jsx)(o.strong,{children:(0,c.jsx)(o.code,{children:"interface_cfg"})})," (str): Path of interface configuration file."]}),"\n",(0,c.jsxs)(o.li,{children:[(0,c.jsx)(o.strong,{children:(0,c.jsx)(o.code,{children:"target_cfg"})})," (str): Path of target configuration file."]}),"\n"]}),"\n",(0,c.jsx)(o.p,{children:(0,c.jsx)(o.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,c.jsxs)(o.ul,{children:["\n",(0,c.jsxs)(o.li,{children:[(0,c.jsx)(o.strong,{children:(0,c.jsx)(o.code,{children:"raise_on_error"})})," (bool): Raise an error upon failure. Default is ",(0,c.jsx)(o.code,{children:"True"}),"."]}),"\n",(0,c.jsxs)(o.li,{children:[(0,c.jsx)(o.strong,{children:(0,c.jsx)(o.code,{children:"start_address"})})," (string): Flash memory start address in hex format (required for .bin files)"]}),"\n"]})]})}function m(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,c.jsx)(o,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);