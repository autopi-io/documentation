"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[3078],{28453:(e,t,d)=>{d.d(t,{R:()=>s,x:()=>c});var n=d(96540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},90615:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"cloud/device_management/advanced_settings/autopi_tmu_cm4/cloud-config-mqtt","title":"Mqtt","description":"Broker","source":"@site/docs/cloud/device_management/advanced_settings/autopi_tmu_cm4/mqtt.md","sourceDirName":"cloud/device_management/advanced_settings/autopi_tmu_cm4","slug":"/cloud/device_management/advanced_settings/autopi_tmu_cm4/cloud-config-mqtt","permalink":"/cloud/device_management/advanced_settings/autopi_tmu_cm4/cloud-config-mqtt","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/cloud/device_management/advanced_settings/autopi_tmu_cm4/mqtt.md","tags":[],"version":"current","frontMatter":{"id":"cloud-config-mqtt","title":"Mqtt"},"sidebar":"sidebar","previous":{"title":"Key Fob","permalink":"/cloud/device_management/advanced_settings/autopi_tmu_cm4/cloud-config-key-fob"},"next":{"title":"Obd","permalink":"/cloud/device_management/advanced_settings/autopi_tmu_cm4/cloud-config-obd"}}');var i=d(74848),r=d(28453);const s={id:"cloud-config-mqtt",title:"Mqtt"},c=void 0,h={},l=[{value:"Broker",id:"broker",level:2},{value:"Bind",id:"bind",level:4},{value:"Returner",id:"returner",level:2},{value:"Connection",id:"connection",level:4},{value:"Authentication",id:"authentication",level:6},{value:"Tls",id:"tls",level:6}];function o(e){const t={h2:"h2",h4:"h4",h6:"h6",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"broker",children:"Broker"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"INSTALL"}),(0,i.jsx)(t.td,{children:"Run a local broker/server on the device?"}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"none"}),(0,i.jsx)(t.td,{children:"-"})]})})]}),"\n",(0,i.jsx)(t.h4,{id:"bind",children:"Bind"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ADDRESS"}),(0,i.jsx)(t.td,{children:"Specify which address the broker/server should bind to."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"0.0.0.0"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PORT"}),(0,i.jsx)(t.td,{children:"Specify which port the broker/server should listen on."}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"1883"}),(0,i.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"returner",children:"Returner"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ENABLED"}),(0,i.jsx)(t.td,{children:"Enable MQTT returner for this device. The returner will automatically be added as hook in all services."}),(0,i.jsx)(t.td,{children:"bool"}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"-"})]})})]}),"\n",(0,i.jsx)(t.h4,{id:"connection",children:"Connection"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PROTOCOL"}),(0,i.jsx)(t.td,{children:"Specify the version of the MQTT protocol to use."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"MQTTv311"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TLS"}),(0,i.jsx)(t.td,{children:"Enable SSL/TLS support?"}),(0,i.jsx)(t.td,{children:"bool"}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CLIENT ID"}),(0,i.jsx)(t.td,{children:"The unique client ID string used when connecting to the broker."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"AutoPi-XXXXXXXXXXXX"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PORT"}),(0,i.jsx)(t.td,{children:"The port of the broker to connect to. Note that the default port for MQTT over SSL/TLS is 8883."}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"1883"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"HOST"}),(0,i.jsx)(t.td,{children:"Specify the hostname or IP address of the broker."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"localhost"}),(0,i.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(t.h6,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PASSWORD"}),(0,i.jsx)(t.td,{children:"Password for broker authentication."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"USERNAME"}),(0,i.jsx)(t.td,{children:"Username for broker authentication."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(t.h6,{id:"tls",children:"Tls"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Unit"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CA CERTS"}),(0,i.jsx)(t.td,{children:"Path to the Certificate Authority certificate files that are to be treated as trusted."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CERT REQS"}),(0,i.jsx)(t.td,{children:"Defines the certificate requirements that the client imposes on the broker."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"CERT_REQUIRED"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"VERSION"}),(0,i.jsx)(t.td,{children:"Specifies the version of the SSL/TLS protocol to be used."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CERT FILE"}),(0,i.jsx)(t.td,{children:"String pointing to the PEM encoded client certificate key."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"KEY FILE"}),(0,i.jsx)(t.td,{children:"String pointing to the PEM encoded client private key."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CIPHERS"}),(0,i.jsx)(t.td,{children:"String specifying which encryption ciphers are allowable for this connection."}),(0,i.jsx)(t.td,{children:"str"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);