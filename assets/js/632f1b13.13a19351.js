(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[869],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return p},kt:function(){return v}});var n=t(67294);function c(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,c=function(e,r){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(c[t]=e[t]);return c}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=u(t),v=c,m=f["".concat(s,".").concat(v)]||f[v]||l[v]||o;return t?n.createElement(m,i(i({ref:r},p),{},{components:t})):n.createElement(m,i({ref:r},p))}));function v(e,r){var t=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var o=t.length,i=new Array(o);i[0]=f;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a.mdxType="string"==typeof e?e:c,i[1]=a;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},71330:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var n=t(22122),c=t(19756),o=(t(67294),t(3905)),i=["components"],a={id:"core-services-api-service",title:"Api Service"},s=void 0,u={unversionedId:"core/services/core-services-api-service",id:"core/services/core-services-api-service",isDocsHomePage:!1,title:"Api Service",description:"Serves the local REST API for running AutoPi commands.",source:"@site/docs/core/services/api_service.md",sourceDirName:"core/services",slug:"/core/services/core-services-api-service",permalink:"/core/services/core-services-api-service",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/services/api_service.md",tags:[],version:"current",frontMatter:{id:"core-services-api-service",title:"Api Service"},sidebar:"sidebar",previous:{title:"Acc Manager",permalink:"/core/services/core-services-acc-manager"},next:{title:"Audio Manager",permalink:"/core/services/core-services-audio-manager"}},p=[],l={toc:p};function f(e){var r=e.components,t=(0,c.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Serves the local REST API for running AutoPi commands."))}f.isMDXComponent=!0}}]);