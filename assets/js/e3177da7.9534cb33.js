(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[7451],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4009:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),l=["components"],o={id:"core-services-acc-manager",title:"Acc Manager"},c={unversionedId:"core/services/core-services-acc-manager",id:"core/services/core-services-acc-manager",isDocsHomePage:!1,title:"Acc Manager",description:"Enrichers",source:"@site/docs/core/services/acc_manager.md",sourceDirName:"core/services",slug:"/core/services/core-services-acc-manager",permalink:"/core/services/core-services-acc-manager",version:"current",frontMatter:{id:"core-services-acc-manager",title:"Acc Manager"},sidebar:"coreSidebar",previous:{title:"Introduction",permalink:"/core/services/core-services-intro"},next:{title:"Api Service",permalink:"/core/services/core-services-api-service"}},s=[{value:"Enrichers",id:"enrichers",children:[{value:"<code>roll_pitch</code>",id:"roll_pitch",children:[]}]},{value:"Filters",id:"filters",children:[{value:"<code>alternating_readout</code>",id:"alternating_readout",children:[]}]},{value:"Handlers",id:"handlers",children:[{value:"<code>connection</code>",id:"connection",children:[]},{value:"<code>dump</code>",id:"dump",children:[]},{value:"<code>query</code>",id:"query",children:[]}]}],u={toc:s};function p(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"enrichers"},"Enrichers"),(0,i.kt)("h3",{id:"roll_pitch"},(0,i.kt)("inlineCode",{parentName:"h3"},"roll_pitch")),(0,i.kt)("p",null,"Calculates roll and pitch for a XYZ reading and appends it to the result.\nThis enricher supports both single value results as well as multiple values results."),(0,i.kt)("h2",{id:"filters"},"Filters"),(0,i.kt)("h3",{id:"alternating_readout"},(0,i.kt)("inlineCode",{parentName:"h3"},"alternating_readout")),(0,i.kt)("p",null,"Filter that only returns alternating/changed results."),(0,i.kt)("h2",{id:"handlers"},"Handlers"),(0,i.kt)("h3",{id:"connection"},(0,i.kt)("inlineCode",{parentName:"h3"},"connection")),(0,i.kt)("p",null,"Manages current connection."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"close"))," (bool): Close MMA8X5X connection? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"False"),". ")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dump"},(0,i.kt)("inlineCode",{parentName:"h3"},"dump")),(0,i.kt)("p",null,"Dumps raw XYZ readings to screen or file."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"duration"))," (int): How many seconds to record data? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"file"))," (str): Write data to a file with the given name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"range"))," (int): Maximum number of g-forces being measured. Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"8"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"rate"))," (float): How many Hz (samples per second)? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"50"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"decimals"))," (int): How many decimals to calculate? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"4"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"timestamp"))," (bool): Add timestamp to each sample? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"True"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"sound"))," (bool): Play sound when starting and stopping recording? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"True"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"interrupt_driven"))," (bool): Await hardware data ready signal before reading a sample? Default value is ",(0,i.kt)("inlineCode",{parentName:"li"},"True"),".")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"query"},(0,i.kt)("inlineCode",{parentName:"h3"},"query")),(0,i.kt)("p",null,"Queries a given accelerometer command."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"cmd"))," (str): The command to query.")))}p.isMDXComponent=!0}}]);