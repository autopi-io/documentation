"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[7299],{28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>a});var t=n(96540);const i={},s=t.createContext(i);function d(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:r},e.children)}},66788:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"core/services/core-services-rfid-manager","title":"Rfid Manager","description":"Handlers","source":"@site/docs/core/services/rfid_manager.md","sourceDirName":"core/services","slug":"/core/services/core-services-rfid-manager","permalink":"/core/services/core-services-rfid-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/services/rfid_manager.md","tags":[],"version":"current","frontMatter":{"id":"core-services-rfid-manager","title":"Rfid Manager"},"sidebar":"sidebar","previous":{"title":"Process Manager","permalink":"/core/services/core-services-process-manager"},"next":{"title":"Spm Manager","permalink":"/core/services/core-services-spm-manager"}}');var i=n(74848),s=n(28453);const d={id:"core-services-rfid-manager",title:"Rfid Manager"},a=void 0,c={},o=[{value:"Handlers",id:"handlers",level:2},{value:"<code>authenticate_rfid</code>",id:"authenticate_rfid",level:3},{value:"<code>load_settings</code>",id:"load_settings",level:3},{value:"<code>reader</code>",id:"reader",level:3},{value:"Triggers",id:"triggers",level:2},{value:"<code>rfid_read</code>",id:"rfid_read",level:3}];function l(e){const r={admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"handlers",children:"Handlers"}),"\n",(0,i.jsx)(r.h3,{id:"authenticate_rfid",children:(0,i.jsx)(r.code,{children:"authenticate_rfid"})}),"\n",(0,i.jsxs)(r.p,{children:["If there are any authorized_tokens saved in context, this handler will attempt to authenticate\nan RFID against those tokens. Triggers ",(0,i.jsx)(r.code,{children:"system/rfid/<rfid>/rejected"})," and\n",(0,i.jsx)(r.code,{children:"system/rfid/<rfid>/authenticated"})," events."]}),"\n",(0,i.jsxs)(r.p,{children:["If the tokens get updated in /opt/autopi/rfid/settings.yaml the manager needs to know about\nthe changes - use ",(0,i.jsx)(r.code,{children:"load_settings_handler"})," to reload the settings."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"load_settings",children:(0,i.jsx)(r.code,{children:"load_settings"})}),"\n",(0,i.jsx)(r.p,{children:"Read the settings file stored in /opt/autopi/rfid/settings.yaml and load it."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"reader",children:(0,i.jsx)(r.code,{children:"reader"})}),"\n",(0,i.jsx)(r.p,{children:"Reads input from the RFID reader."}),"\n",(0,i.jsx)(r.h2,{id:"triggers",children:"Triggers"}),"\n",(0,i.jsx)(r.h3,{id:"rfid_read",children:(0,i.jsx)(r.code,{children:"rfid_read"})}),"\n",(0,i.jsxs)(r.p,{children:["Triggers ",(0,i.jsx)(r.code,{children:"system/rfid/<rfid>/read"})," events when RFID chips are read."]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsx)(r.p,{children:"Use in conjunction with reader_handler."})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);