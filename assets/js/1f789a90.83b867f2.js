(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[9622],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(k,l(l({ref:t},m),{},{components:n})):r.createElement(k,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1123:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),l=["components"],i={id:"core-commands-log",title:"Log"},p=void 0,s={unversionedId:"core/commands/core-commands-log",id:"core/commands/core-commands-log",isDocsHomePage:!1,title:"Log",description:"log.help",source:"@site/docs/core/commands/log.md",sourceDirName:"core/commands",slug:"/core/commands/core-commands-log",permalink:"/core/commands/core-commands-log",version:"current",frontMatter:{id:"core-commands-log",title:"Log"},sidebar:"coreSidebar",previous:{title:"Keyfob",permalink:"/core/commands/core-commands-keyfob"},next:{title:"Minionutil",permalink:"/core/commands/core-commands-minionutil"}},m=[{value:"<code>log.help</code>",id:"loghelp",children:[]},{value:"<code>log.kernel</code>",id:"logkernel",children:[]},{value:"<code>log.kernel_iter</code>",id:"logkernel_iter",children:[]},{value:"<code>log.query</code>",id:"logquery",children:[]}],u={toc:m};function c(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"loghelp"},(0,o.kt)("inlineCode",{parentName:"h2"},"log.help")),(0,o.kt)("p",null,"Shows this help information."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"logkernel"},(0,o.kt)("inlineCode",{parentName:"h2"},"log.kernel")),(0,o.kt)("p",null,"Print and/or clear the kernel ring buffer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"err"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"offset"))," (str): Offset regex to begin from."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"clear"))," (bool): Clear after reading.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"logkernel_iter"},(0,o.kt)("inlineCode",{parentName:"h2"},"log.kernel_iter")),(0,o.kt)("p",null,"Helper function to retrieve new kernel log entries (based on cached offset value)."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"err"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"offset_key"))," (str): Key to get value from result and use as offset. Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"timestamp"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"reset"))," (bool): Reset cached offset value and start over.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"logquery"},(0,o.kt)("inlineCode",{parentName:"h2"},"log.query")),(0,o.kt)("p",null,"Query a log file or any text file."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"file"))," (str): Path of log file.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"begin"))," (str): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"^"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"end"))," (str): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"$"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},".*"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"reverse"))," (bool): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"first"))," (int): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"last"))," (int): Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"100"),".")))}c.isMDXComponent=!0}}]);