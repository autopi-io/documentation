"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[8299],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const l={},o=s.createContext(l);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},92688:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"core/commands/core-commands-stn","title":"Stn","description":"stn.ext_sleep","source":"@site/docs/core/commands/stn.md","sourceDirName":"core/commands","slug":"/core/commands/core-commands-stn","permalink":"/core/commands/core-commands-stn","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/core/commands/stn.md","tags":[],"version":"current","frontMatter":{"id":"core-commands-stn","title":"Stn"},"sidebar":"sidebar","previous":{"title":"Spm","permalink":"/core/commands/core-commands-spm"},"next":{"title":"Time","permalink":"/core/commands/core-cmd-time"}}');var l=t(74848),o=t(28453);const r={id:"core-commands-stn",title:"Stn"},c=void 0,i={},d=[{value:"<code>stn.ext_sleep</code>",id:"stnext_sleep",level:2},{value:"<code>stn.ext_wake</code>",id:"stnext_wake",level:2},{value:"<code>stn.help</code>",id:"stnhelp",level:2},{value:"<code>stn.power_config</code>",id:"stnpower_config",level:2},{value:"<code>stn.power_pin_polarity</code>",id:"stnpower_pin_polarity",level:2},{value:"<code>stn.power_trigger_status</code>",id:"stnpower_trigger_status",level:2},{value:"<code>stn.sleep</code>",id:"stnsleep",level:2},{value:"<code>stn.uart_sleep</code>",id:"stnuart_sleep",level:2},{value:"<code>stn.uart_wake</code>",id:"stnuart_wake",level:2},{value:"<code>stn.volt_calibrate</code>",id:"stnvolt_calibrate",level:2},{value:"<code>stn.volt_change_wake</code>",id:"stnvolt_change_wake",level:2},{value:"<code>stn.volt_level</code>",id:"stnvolt_level",level:2},{value:"<code>stn.volt_level_sleep</code>",id:"stnvolt_level_sleep",level:2},{value:"<code>stn.volt_level_wake</code>",id:"stnvolt_level_wake",level:2}];function a(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"stnext_sleep",children:(0,l.jsx)(n.code,{children:"stn.ext_sleep"})}),"\n",(0,l.jsx)(n.p,{children:"External sleep trigger configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnext_wake",children:(0,l.jsx)(n.code,{children:"stn.ext_wake"})}),"\n",(0,l.jsx)(n.p,{children:"External wake trigger configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnhelp",children:(0,l.jsx)(n.code,{children:"stn.help"})}),"\n",(0,l.jsx)(n.p,{children:"Shows this help information."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnpower_config",children:(0,l.jsx)(n.code,{children:"stn.power_config"})}),"\n",(0,l.jsx)(n.p,{children:"Summarizes active PowerSave configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnpower_pin_polarity",children:(0,l.jsx)(n.code,{children:"stn.power_pin_polarity"})}),"\n",(0,l.jsx)(n.p,{children:"Specify whether the pin outputs a logic LOW or HIGH in low power mode."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnpower_trigger_status",children:(0,l.jsx)(n.code,{children:"stn.power_trigger_status"})}),"\n",(0,l.jsx)(n.p,{children:"Reports last active sleep/wakeup triggers since last reset."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnsleep",children:(0,l.jsx)(n.code,{children:"stn.sleep"})}),"\n",(0,l.jsx)(n.p,{children:"Enter sleep mode after the specified delay time.\nThe OBD connection is closed as default in order to prevent STN wake up on UART communication."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnuart_sleep",children:(0,l.jsx)(n.code,{children:"stn.uart_sleep"})}),"\n",(0,l.jsx)(n.p,{children:"UART inactivity timeout configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnuart_wake",children:(0,l.jsx)(n.code,{children:"stn.uart_wake"})}),"\n",(0,l.jsx)(n.p,{children:"UART wakeup pulse timing configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnvolt_calibrate",children:(0,l.jsx)(n.code,{children:"stn.volt_calibrate"})}),"\n",(0,l.jsxs)(n.p,{children:["Manual calibration of voltage measurement.\nDefault value ",(0,l.jsx)(n.code,{children:"0000"})," will restore to the factory calibration."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"OPTIONAL ARGUMENTS"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"value"})})," (int): The value to set the calibration to. Default is 0000."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"confirm"})})," (bool): Achknowledge the execution of this command. Default is ",(0,l.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnvolt_change_wake",children:(0,l.jsx)(n.code,{children:"stn.volt_change_wake"})}),"\n",(0,l.jsx)(n.p,{children:"Voltage change wakeup trigger configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnvolt_level",children:(0,l.jsx)(n.code,{children:"stn.volt_level"})}),"\n",(0,l.jsx)(n.p,{children:"Determine the current voltage level."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnvolt_level_sleep",children:(0,l.jsx)(n.code,{children:"stn.volt_level_sleep"})}),"\n",(0,l.jsx)(n.p,{children:"Voltage level sleep trigger configuration."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"stnvolt_level_wake",children:(0,l.jsx)(n.code,{children:"stn.volt_level_wake"})}),"\n",(0,l.jsx)(n.p,{children:"Voltage level wakeup trigger configuration."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);