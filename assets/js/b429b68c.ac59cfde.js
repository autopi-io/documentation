(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{133:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),i=n(7),l=(n(0),n(156)),r={id:"core-commands-minionutil",title:"Minionutil"},o={unversionedId:"core/commands/core-commands-minionutil",id:"core/commands/core-commands-minionutil",isDocsHomePage:!1,title:"Minionutil",description:"minionutil.change_master",source:"@site/docs/core/commands/minionutil.md",slug:"/core/commands/core-commands-minionutil",permalink:"/core/commands/core-commands-minionutil",version:"current",sidebar:"coreSidebar",previous:{title:"Log",permalink:"/core/commands/core-commands-log"},next:{title:"Obd",permalink:"/core/commands/core-commands-obd"}},c=[{value:"<code>minionutil.change_master</code>",id:"minionutilchange_master",children:[]},{value:"<code>minionutil.help</code>",id:"minionutilhelp",children:[]},{value:"<code>minionutil.last_errors</code>",id:"minionutillast_errors",children:[]},{value:"<code>minionutil.last_logs</code>",id:"minionutillast_logs",children:[]},{value:"<code>minionutil.last_startup</code>",id:"minionutillast_startup",children:[]},{value:"<code>minionutil.log_files</code>",id:"minionutillog_files",children:[]},{value:"<code>minionutil.master_status</code>",id:"minionutilmaster_status",children:[]},{value:"<code>minionutil.request_restart</code>",id:"minionutilrequest_restart",children:[]},{value:"<code>minionutil.restart</code>",id:"minionutilrestart",children:[]},{value:"<code>minionutil.run_job</code>",id:"minionutilrun_job",children:[]},{value:"<code>minionutil.status_schedule</code>",id:"minionutilstatus_schedule",children:[]},{value:"<code>minionutil.trigger_event</code>",id:"minionutiltrigger_event",children:[]},{value:"<code>minionutil.update_release</code>",id:"minionutilupdate_release",children:[]}],m={toc:c};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.a)("h2",{id:"minionutilchange_master"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.change_master")),Object(l.a)("p",null,"Change to different master host."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"host"))," (str): Hostname of the new master to change to.")),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"confirm"))," (bool): Acknowledge the execution of this command. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilhelp"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.help")),Object(l.a)("p",null,"Shows this help information."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutillast_errors"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.last_errors")),Object(l.a)("p",null,"Get last errors from minion log."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"minion"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"$"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"level"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"error"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"100"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutillast_logs"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.last_logs")),Object(l.a)("p",null,"Get last log lines from minion log."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"minion"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"$"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},".*"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"100"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutillast_startup"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.last_startup")),Object(l.a)("p",null,"Get log lines for last startup sequence."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"file"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"minion"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"until"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"$"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"Setting up the Salt Minion"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"limit"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"100"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutillog_files"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.log_files")),Object(l.a)("p",null,"List all minion log files."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilmaster_status"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.master_status")),Object(l.a)("p",null,"Get status of connection to master.\nImplementation originates from the ",Object(l.a)("inlineCode",{parentName:"p"},"status.master")," command but without the logic to trigger events."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilrequest_restart"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.request_restart")),Object(l.a)("p",null,"Request for a future restart of the minion service."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"pending"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"True"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"immediately"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"delay"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"10"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"expiration"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"1200"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to restart. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"unknown"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilrestart"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.restart")),Object(l.a)("p",null,"Restart the minion service immediately."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"reason"))," (str): Reason code that tells why we decided to restart. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"unknown"),".")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilrun_job"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.run_job")),Object(l.a)("p",null,"Run a job by passing it to the minion process.\nThis function makes it possible to run states and also get pillar data from external processes (engines etc.)."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilstatus_schedule"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.status_schedule")),Object(l.a)("p",null,"Dedicated to be called from schedule and trigger minion status events."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutiltrigger_event"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.trigger_event")),Object(l.a)("p",null,"Triggers an event on the minion event bus."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"minionutilupdate_release"},Object(l.a)("inlineCode",{parentName:"h2"},"minionutil.update_release")),Object(l.a)("p",null,"Update a minion to newest release by running a highstate if not already up-to-date."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"force"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"dry_run"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"only_retry"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),".")))}s.isMDXComponent=!0},156:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var a=n(0),i=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=i.a.createContext({}),s=function(e){var t=i.a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(n),b=a,O=p["".concat(r,".").concat(b)]||p[b]||u[b]||l;return n?i.a.createElement(O,o(o({ref:t},m),{},{components:n})):i.a.createElement(O,o({ref:t},m))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var m=2;m<l;m++)r[m]=n[m];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);