(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[634],{3905:function(e,t,o){"use strict";o.d(t,{Zo:function(){return u},kt:function(){return m}});var n=o(7294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(o),m=i,p=d["".concat(s,".").concat(m)]||d[m]||h[m]||a;return o?n.createElement(p,r(r({ref:t},u),{},{components:o})):n.createElement(p,r({ref:t},u))}));function m(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=o.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<a;c++)r[c]=o[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},2943:function(e,t,o){"use strict";o.d(t,{$:function(){return i}});var n=o(7294),i=function(e){var t=e.title,o=e.url;return n.createElement(n.Fragment,null,n.createElement("h2",null,"Discussion"),n.createElement("p",null,"If you'd like to discuss this topic with us or other fellow community members, you can do so on our community page dedicated for this guide: ",n.createElement("a",{href:o},t),"."),n.createElement("p",null,"You can also write us an email on ",n.createElement("a",{href:"mailto:support@autopi.io"},"support@autopi.io"),". We usually respond back in 24 hours on working days."))}},9058:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return h},default:function(){return m}});var n=o(2122),i=o(9756),a=(o(7294),o(3905)),r=o(2943),l=["components"],s={id:"installing-a-camera-on-your-autopi",title:"Installing a Camera on Your AutoPi"},c=void 0,u={unversionedId:"guides/installing-a-camera-on-your-autopi",id:"guides/installing-a-camera-on-your-autopi",isDocsHomePage:!1,title:"Installing a Camera on Your AutoPi",description:"Hello everyone!",source:"@site/docs/guides/installing_a_camera_on_your_autopi.mdx",sourceDirName:"guides",slug:"/guides/installing-a-camera-on-your-autopi",permalink:"/guides/installing-a-camera-on-your-autopi",version:"current",frontMatter:{id:"installing-a-camera-on-your-autopi",title:"Installing a Camera on Your AutoPi"},sidebar:"guidesSidebar",previous:{title:"How to SSH to your device",permalink:"/guides/how-to-ssh-to-your-device"},next:{title:"Jumpers",permalink:"/guides/jumpers"}},h=[{value:"Setting up basic camera settings",id:"setting-up-basic-camera-settings",children:[]},{value:"Recording all the time",id:"recording-all-the-time",children:[]},{value:"Motion detection",id:"motion-detection",children:[]},{value:"Extra fine tuning",id:"extra-fine-tuning",children:[]}],d={toc:h};function m(e){var t=e.components,o=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hello everyone!"),(0,a.kt)("p",null,"Today, we're going to explore how you can attach an external USB camera to your AutoPi device and make some use out of it.\nThere is one prerequisite however - you need to be able to SSH into your dongle. We already have a guide on that which you can\ntake a look at ",(0,a.kt)("a",{parentName:"p",href:"https://community.autopi.io/t/guide-how-to-ssh-to-your-dongle/386"},"here"),"."),(0,a.kt)("p",null,"Firstly, we need to do some initial setup to get the AutoPi ready to use an external USB web camera. Let's start with the\nsoftware that we're going to use:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://motion-project.github.io/motion_guide.html"},"motion")," - Motion is a daemon service that is responsible for communicating\nwith the camera. It'll setup the devices (",(0,a.kt)("inlineCode",{parentName:"p"},"/dev/video*"),") and get them started.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/ccrisan/motioneyeA"},"motionEye")," - MotionEye is a web based frontend for motion. It provides an\neasy to use interface to setup configuration for each camera and also shows what the cameras are currently seeing."))),(0,a.kt)("p",null,"Installing both of them should be as easy as installing any other package on a debian system. We will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"apt")," command.\nThe next command installs motion daemon and its dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo apt install motion\n")),(0,a.kt)("p",null,"Let's now prepare for the installation of motioneye - there are some dependencies that need to be installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo apt install python-dev libssl-dev libcurl4-openssl-dev libjpeg-dev libz-dev\n")),(0,a.kt)("p",null,"Now that we've got the dependencies installed, let's install motioneye itself:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo pip install motioneye\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": If pillow installation fails, you can try installing it from official repos using ",(0,a.kt)("inlineCode",{parentName:"p"},"apt install python-pillow"),"."),(0,a.kt)("p",null,"After successfully installing motion and motioneye we now need to prepare some directories for them to use.\nThe next two commands will create the motioneye configuration directory and copy the default configuration file in that directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo mkdir -p /etc/motioneye\n$ sudo cp /usr/local/share/motioneye/extra/motioneye.conf.sample /etc/motioneye/motioneye.conf\n")),(0,a.kt)("p",null,"Now, let's create the directory in which motioneye will save our video files to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo mkdir -p /var/lib/motioneye\n")),(0,a.kt)("p",null,"Finally, let's create a service file for motioneye so that the system can automatically start it up:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ sudo cp /usr/local/share/motioneye/extra/motioneye.systemd-unit-local /etc/systemd/system/motioneye.service\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable motioneye\n$ sudo systemctl restart motioneye\n")),(0,a.kt)("p",null,"At this point, the web interface should be running on the device, however you probably won't be able to access it from your computer or\nmobile phone. Instead, it's only accessible from the device itself. This is because there are some firewall settings that have been\nimplemented on the device and we need to add a new exception. We can do that by navigating to the Advanced > Settings menu in my.autopi.io.\nThere, one of the inner tabs called System should contain an entry called Network > Firewall. Let's add the following new entry to the list:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"-A INPUT -s 192.168.4.0/24 -i uap0 -p tcp --dport 8765 -j ACCEPT\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE"),": 8765 is only the default port for MotionEye. If you happen to change the port number, please make sure to add the rule\nwith the respective new port number."),(0,a.kt)("p",null,"What this entry will do is allow all TCP traffic that comes from the AutoPi's WiFi network interface through port 8765 to be accepted.\nThis will allow you to navigate to the following link: local.autopi.io:8765. There you'll finally be able to see the MotionEye frontend interface."),(0,a.kt)("p",null,"At this point, you should be able to plug in the camera to your device's micro-usb, wait a few seconds and see the video feed on your screen.\nYou should also be able to see the settings for the camera by clicking on the 'burger-menu' button on the top left of the website. If\nyou're unable to see a long list of settings, try reloging as an admin. If this still doesn't do the trick, try restarting the motion and\nmotioneye services using the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl restart motion motioneye\n")),(0,a.kt)("p",null,"Now we will move on to some pointers on how to get started with certain, popular projects."),(0,a.kt)("h3",{id:"setting-up-basic-camera-settings"},"Setting up basic camera settings"),(0,a.kt)("p",null,'Sometimes the image on the camera can be very dim or with a low resolution as a default. The general settings for the camera can be found under\nthe "Video Device" section. Settings such as brightness, contrast, sharpness and video resolution can be set up there. This should allow you to\nfine tune your camera for the environment you\'re looking to use it in. There is also the ability to automatically set the brighness and exposure\nof the camera. '),(0,a.kt)("p",null,"Furthermore, you're also able to change the default location of where the video files (recordings) are saved. The default location is\n",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/motioneye/Camera1"),', however you can change that by going under the "File Storage" section.'),(0,a.kt)("p",null,"There you're also able to setup a webhook or a command to be called whenever a new file has been saved on the file system."),(0,a.kt)("h3",{id:"recording-all-the-time"},"Recording all the time"),(0,a.kt)("p",null,'Setting up a constantly recording camera is very simple. All you need to do is to go to your motioneye website\n(local.autopi.io:8765 while connected to the AutoPi device hotspot) and open the settings for the camera. In the list there should be a section\ncalled "Movies". You will need to turn on the movies section (which will enable the camera to record). In the Recording Mode field, select\n"Continuous Recording" (It\'s of course also possible to have the recording based on motion detection). The rest of the settings can be selected\nbased on personal preference. '),(0,a.kt)("h3",{id:"motion-detection"},"Motion detection"),(0,a.kt)("p",null,"Apart from the ability to record only when the camera detects motion, you can also do some other cool things. For example, you\ncan set up a mail notification or a webhook to be called whenever there is some motion. There is also the option to execute a\ncommand on the AutoPi either when a motion is detected or when the motion ends. That is to say, after the camera has started\ndetecting motion, it can also execute a command when there is no more motion detected by it."),(0,a.kt)("p",null,'You can find those settings under the "Motion Detection" and "Motion Notification" settings. In the Motion Detection section you can\nfine tune how you would like the motion to be detected, with higher or lower thresholds, for specific amount of frames and so on.\n"Motion Notifications" section is where you can setup the triggers to be executed whenever a motion is detected (or after).'),(0,a.kt)("h3",{id:"extra-fine-tuning"},"Extra fine tuning"),(0,a.kt)("p",null,"For the more tech-savvy or adventurous people out there, there is also some configuration options that work directly with motion.\nRemember that MotionEye is actually a front-end application that communicates directly with motion. This means that all the options\nthat are available on MotionEye are also available on Motion, however much more detailed. For example, there are more events that can\nbe used with Motion than there are with MotionEye. One really good example is ",(0,a.kt)("inlineCode",{parentName:"p"},"on_camera_lost")," which will trigger whenever a camera\ncan't be found or when a camera is lost during its work, which allows you to set a notification if your camera stops working."),(0,a.kt)("p",null,"You can look at all the configuration options available for Motion in ",(0,a.kt)("a",{parentName:"p",href:"https://motion-project.github.io/motion_config.html"},"this")," link.\nThe documentation can be a bit overwhelming at first, however the developers have set it up in a neat way where there is a list of\nall the options in alphabetical order first and then a list of the same options based on category.\nAfterwards, there is a long list of the description of each option. "),(0,a.kt)(r.$,{title:"Installing a Camera on Your AutoPi",url:"https://community.autopi.io/t/setup-an-external-usb-camera-with-your-autopi/2429",mdxType:"Discussion"}))}m.isMDXComponent=!0}}]);