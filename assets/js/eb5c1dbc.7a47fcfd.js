(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[7405],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return m},kt:function(){return p}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=c(r),p=a,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||o;return r?n.createElement(f,s(s({ref:t},m),{},{components:r})):n.createElement(f,s({ref:t},m))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},72999:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return d}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),s=["components"],i={id:"core-services-modem-manager",title:"Modem Manager"},l=void 0,c={unversionedId:"core/services/core-services-modem-manager",id:"core/services/core-services-modem-manager",isDocsHomePage:!1,title:"Modem Manager",description:"Handlers",source:"@site/docs/core/services/modem_manager.md",sourceDirName:"core/services",slug:"/core/services/core-services-modem-manager",permalink:"/core/services/core-services-modem-manager",editUrl:"https://github.com/autopi-io/documentation/edit/master/docs/core/services/modem_manager.md",tags:[],version:"current",frontMatter:{id:"core-services-modem-manager",title:"Modem Manager"},sidebar:"coreSidebar",previous:{title:"Key Fob Manager",permalink:"/core/services/core-services-key-fob-manager"},next:{title:"Obd Manager",permalink:"/core/services/core-services-obd-manager"}},m=[{value:"Handlers",id:"handlers",children:[{value:"<code>connection</code>",id:"connection",children:[]},{value:"<code>read_sms</code>",id:"read_sms",children:[]},{value:"<code>reset</code>",id:"reset",children:[]}]}],u={toc:m};function d(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"handlers"},"Handlers"),(0,o.kt)("h3",{id:"connection"},(0,o.kt)("inlineCode",{parentName:"h3"},"connection")),(0,o.kt)("p",null,"Queries a given connection class command."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ARGUMENTS")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"cmd"))," (str): The command to query.")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"read_sms"},(0,o.kt)("inlineCode",{parentName:"h3"},"read_sms")),(0,o.kt)("p",null,"Reads SMS messages stored in the modem and optionally processes them into ",(0,o.kt)("inlineCode",{parentName:"p"},"system/sms/received")," events.\nThose events hold information such as the timestamp of the message (when it was received by the\nmodem), the sender and the text."),(0,o.kt)("p",null,"Optional parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'status (str): The status of the messages that are to be returned. Look below for avalable options. Default: "ALL".'),(0,o.kt)("li",{parentName:"ul"},"clear (bool): Should the returned messages be removed from the modem as well?"),(0,o.kt)("li",{parentName:"ul"},'format_mode (str): The format in which the messages should be processed. Currently, only TXT mode is supported. Default: "TXT".'),(0,o.kt)("li",{parentName:"ul"},"trigger_events (bool): Should the handler trigger SMS events? Default: False")),(0,o.kt)("p",null,"Available options (status):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"REC UNREAD" - new messages'),(0,o.kt)("li",{parentName:"ul"},'"REC READ" - read messages'),(0,o.kt)("li",{parentName:"ul"},'"STO UNSENT" - stored messages not sent yet'),(0,o.kt)("li",{parentName:"ul"},'"STO SENT" - stored messages already sent'),(0,o.kt)("li",{parentName:"ul"},'"ALL" - all messages')),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"reset"},(0,o.kt)("inlineCode",{parentName:"h3"},"reset")),(0,o.kt)("p",null,"Enable or disable the one shot or periodic unit reset."),(0,o.kt)("p",null,"Optional parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"mode (string): The mode in which to operate the command. For available values, look below. Default: None."),(0,o.kt)("li",{parentName:"ul"},"delay (number): Time interval in minutes after that the unit reboots. Default: 0."),(0,o.kt)("li",{parentName:"ul"},'reason (str): The reason the reset was performed. Default: "unspecified".')),(0,o.kt)("p",null,"Available modes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"disabled: Disables unit reset."),(0,o.kt)("li",{parentName:"ul"},"one_shot: Enables the unit reset only one time (one shot reset)."),(0,o.kt)("li",{parentName:"ul"},"periodic: Enables periodic resets of the unit.")))}d.isMDXComponent=!0}}]);