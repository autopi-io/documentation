"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[3622],{13662:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"developer_guides/enabling_uart_on_TMU_devices","title":"Enabling an External UART on AutoPi TMU CM4 Devices","description":"-------------------------------------------------------","source":"@site/docs/developer_guides/enabling_uart_on_TMU_devices.md","sourceDirName":"developer_guides","slug":"/developer_guides/enabling_uart_on_TMU_devices","permalink":"/developer_guides/enabling_uart_on_TMU_devices","draft":false,"unlisted":false,"editUrl":"https://github.com/autopi-io/documentation/edit/master/docs/developer_guides/enabling_uart_on_TMU_devices.md","tags":[],"version":"current","frontMatter":{"id":"enabling_uart_on_TMU_devices","title":"Enabling an External UART on AutoPi TMU CM4 Devices"},"sidebar":"sidebar","previous":{"title":"Enabling Bluetooth on Legacy Devices With STN Chips","permalink":"/developer_guides/enabling_bluetooth_on_TMU_devices"},"next":{"title":"Setting Up a Device with Verizon Wireless","permalink":"/developer_guides/setting-up-a-device-with-verizon-wireless"}}');var t=i(74848),s=i(28453);const d={id:"enabling_uart_on_TMU_devices",title:"Enabling an External UART on AutoPi TMU CM4 Devices"},l=void 0,o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Why GPIO\xa00/1?",id:"why-gpio01",level:2},{value:"1\xa0\xa0Hardware wiring",id:"1hardware-wiring",level:2},{value:"2\xa0\xa0Enable UART2 in <code>config.txt</code>",id:"2enable-uart2-in-configtxt",level:2},{value:"3\xa0\xa0Verify with a loop\u2011back test",id:"3verify-with-a-loopback-test",level:2},{value:"Alternative: use <strong><code>minicom</code></strong>",id:"alternative-use-minicom",level:3},{value:"4\xa0\xa0Using the port in Python",id:"4using-the-port-in-python",level:2},{value:"5\xa0\xa0Troubleshooting",id:"5troubleshooting",level:2},{value:"6\xa0\xa0Advanced topics",id:"6advanced-topics",level:2},{value:"Disable I\xb2C on GPIO0/1 entirely",id:"disable-ic-on-gpio01-entirely",level:3},{value:"Throughput tuning",id:"throughput-tuning",level:3},{value:"7\xa0\xa0References",id:"7references",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SSH access"})," or Physical HDMI/USB console."]}),"\n",(0,t.jsx)(n.li,{children:"Micro\u2011jumper wires or a breakout header to reach pins\xa027/28."}),"\n",(0,t.jsx)(n.li,{children:"A multimeter (optional but handy for continuity checks)."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"why-gpio01",children:"Why GPIO\xa00/1?"}),"\n",(0,t.jsxs)(n.p,{children:["The CM4 has six UART blocks but only ",(0,t.jsx)(n.strong,{children:"GPIO\xa00\xa0&\xa01"})," expose the pins for ",(0,t.jsx)(n.strong,{children:"UART\xa02 (alt\u2011function\xa04)"}),". Your other free pins\u2014",(0,t.jsx)(n.code,{children:"GPIO22\u201124,\xa027"}),"\u2014can do many clever things (SPI, PCM, PWM) but ",(0,t.jsx)(n.em,{children:"not"})," TX/RX. Hence we use the HAT\u2011EEPROM I\xb2C pins (",(0,t.jsx)(n.code,{children:"ID_SD"}),",\xa0",(0,t.jsx)(n.code,{children:"ID_SC"}),") for serial use."]}),"\n",(0,t.jsx)(n.admonition,{title:"EEPROM probe vs. UART",type:"tip",children:(0,t.jsxs)(n.p,{children:["Normally the Pi firmware tugs ",(0,t.jsx)(n.code,{children:"GPIO0/1"})," low during the first 200\u202fms of boot while it looks for a HAT EEPROM. The ",(0,t.jsx)(n.code,{children:"force_eeprom_read=0"})," flag in the next section disables that so your external device sees a clean idle\u2011high line from power\u2011up."]})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"1hardware-wiring",children:"1\xa0\xa0Hardware wiring"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"HAT label"}),(0,t.jsx)(n.th,{children:"BCM\xa0GPIO"}),(0,t.jsx)(n.th,{children:"UART2 signal"}),(0,t.jsx)(n.th,{children:"Connect to"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"ID_SD"})}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"TXD2"})," (Pi \u2192 device)"]}),(0,t.jsx)(n.td,{children:"RX of the external device"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"ID_SC"})}),(0,t.jsx)(n.td,{children:"1"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"RXD2"})," (device \u2192 Pi)"]}),(0,t.jsx)(n.td,{children:"TX of the external device"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"I2C1_SDA*"}),(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"CTS2 (optional)"}),(0,t.jsx)(n.td,{children:"RTS of the device"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"I2C1_SCL*"}),(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"RTS2 (optional)"}),(0,t.jsx)(n.td,{children:"CTS of the device"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"GND"})}),(0,t.jsx)(n.td,{children:"\u2014"}),(0,t.jsx)(n.td,{children:"\u2014"}),(0,t.jsx)(n.td,{children:"Common ground"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Wire CTS/RTS only if you need hardware flow control and intend to enable it in the ",(0,t.jsx)(n.code,{children:"dtoverlay"}),"."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"       AutoPi TMU CM4       External Device\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n ID_SD\u250227   TXD2  \u2794\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u25ba\u2502 RX         \u2502\n ID_SC\u250228   RXD2  \u25c4\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2502 TX         \u2502\n SDA  \u2502 3   CTS2  \u25c4\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2502 RTS  (opt) \u2502\n SCL  \u2502 5   RTS2  \u2794\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u25ba\u2502 CTS  (opt) \u2502\n  GND \u2502 6   GND   \u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2502 GND        \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Level shifting",type:"caution",children:(0,t.jsxs)(n.p,{children:["If the external device works at 5\u202fV ",(0,t.jsx)(n.strong,{children:"TTL"})," or \xb112\u202fV ",(0,t.jsx)(n.strong,{children:"RS\u2011232"}),", you ",(0,t.jsx)(n.em,{children:"must"})," level\u2011shift or use a proper line driver (e.g.\nMAX3232, SN65HVD230 for RS\u2011485). Direct 5\u202fV into a CM4 pin can permanently damage the SoC."]})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"2enable-uart2-in-configtxt",children:["2\xa0\xa0Enable UART2 in ",(0,t.jsx)(n.code,{children:"config.txt"})]}),"\n",(0,t.jsxs)(n.p,{children:["Open the file with ",(0,t.jsx)(n.code,{children:"sudo nano /boot/config.txt"})," and add:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"# === External UART2 on GPIO0/1 ===\nforce_eeprom_read=0          # skip HAT\u2011EEPROM probe on GPIO0/1\ndtoverlay=uart2              # TX=GPIO0, RX=GPIO1  => /dev/ttyAMA1\n#dtoverlay=uart2,ctsrts      # remove # to enable flow control on GPIO2/3\nenable_uart=1                # leave as\u2011is if already present\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Save, exit, and ",(0,t.jsx)(n.code,{children:"sudo reboot"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Check dmesg"})," after the reboot:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dmesg | grep -i ttyAMA1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You should see a line similar to ",(0,t.jsx)(n.code,{children:"ttyAMA1 at MMIO 0x....."})," confirming the driver is active."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3verify-with-a-loopback-test",children:"3\xa0\xa0Verify with a loop\u2011back test"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Jumper ",(0,t.jsx)(n.code,{children:"GPIO0"})," to ",(0,t.jsx)(n.code,{children:"GPIO1"})," directly on the HAT."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Open a terminal on the Pi and run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'stty -F /dev/ttyAMA1 115200 raw -echo\necho "hello" > /dev/ttyAMA1 &\ncat < /dev/ttyAMA1\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The word ",(0,t.jsx)(n.code,{children:"hello"})," should appear. Press ",(0,t.jsx)(n.em,{children:"Ctrl\u2011C"}),", remove the jumper, and connect your real device."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"alternative-use-minicom",children:["Alternative: use ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"minicom"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install -y minicom\nminicom -b 115200 -D /dev/ttyAMA1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Minicom gives you scroll\u2011back, line\u2011ending control and macros\u2014handy for debugging."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4using-the-port-in-python",children:"4\xa0\xa0Using the port in Python"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import serial\n\nser = serial.Serial(\n    port='/dev/ttyAMA1',\n    baudrate=115200,\n    bytesize=serial.EIGHTBITS,\n    parity=serial.PARITY_NONE,\n    stopbits=serial.STOPBITS_ONE,\n    timeout=1\n)\n\nser.write(b'AT\\r')      # send a modem\u2011style command\nprint(ser.readline())   # read back a line\nser.close()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Python\u2019s ",(0,t.jsx)(n.code,{children:"pyserial"})," package makes scripting trivial\u2014ideal for quick sensor polls."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"5troubleshooting",children:"5\xa0\xa0Troubleshooting"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Symptom"}),(0,t.jsx)(n.th,{children:"Likely cause & fix"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)(n.strong,{children:["No ",(0,t.jsx)(n.code,{children:"/dev/ttyAMA1"})]})}),(0,t.jsxs)(n.td,{children:["Overlay typo or missing ",(0,t.jsx)(n.code,{children:"enable_uart=1"}),". Re\u2011check ",(0,t.jsx)(n.code,{children:"/boot/config.txt"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Boot hang with garbage on console"})}),(0,t.jsxs)(n.td,{children:["Another service (e.g. ",(0,t.jsx)(n.code,{children:"serial\u2011getty@ttyAMA1.service"}),") grabbed the port. Disable it with ",(0,t.jsx)(n.code,{children:"sudo systemctl disable --now serial-getty@ttyAMA1.service"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Lines held low for ~0.2\u202fs after power\u2011up"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"force_eeprom_read=0"})," missing; firmware still probing EEPROM."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Flow\u2011control ignored"})}),(0,t.jsxs)(n.td,{children:["Verify you removed ",(0,t.jsx)(n.code,{children:"#"})," in ",(0,t.jsx)(n.code,{children:"dtoverlay=uart2,ctsrts"})," ",(0,t.jsx)(n.em,{children:"and"})," wired GPIO2/3 correctly."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Overruns at >1\u202fMbit/s"})}),(0,t.jsxs)(n.td,{children:["Increase ",(0,t.jsx)(n.code,{children:"init_uart_clock"})," in ",(0,t.jsx)(n.code,{children:"config.txt"})," or use DMA mode via ",(0,t.jsx)(n.code,{children:"dwc_uart_fifo_enable=1"}),"."]})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"6advanced-topics",children:"6\xa0\xa0Advanced topics"}),"\n",(0,t.jsx)(n.h3,{id:"disable-ic-on-gpio01-entirely",children:"Disable I\xb2C on GPIO0/1 entirely"}),"\n",(0,t.jsxs)(n.p,{children:["If another overlay or user\u2011space application tries to re\u2011enable I\xb2C0, add ",(0,t.jsx)(n.code,{children:"dtparam=i2c_vc=off"})," to ",(0,t.jsx)(n.code,{children:"config.txt"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"throughput-tuning",children:"Throughput tuning"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"core_freq_min=250"})," to keep the UART clock stable during idle throttling, and prefer 8N1 framing for max payload density."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"7references",children:"7\xa0\xa0References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://datasheets.raspberrypi.com/cm4/cm4-datasheet.pdf#page=23",children:"Raspberry\xa0Pi CM4 Datasheet \u2013 Alternate\u2011function table"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.raspberrypi.com/documentation/computers/config_txt.html#device-tree-overlays",children:"Understanding Device\xa0Tree Overlays"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/hardware/autopi_tmu_cm4/using-hat/",children:"AutoPi TMU\xa0CM4 HAT Pinout"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);