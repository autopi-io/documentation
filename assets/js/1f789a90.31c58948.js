(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{156:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,O=u["".concat(o,".").concat(b)]||u[b]||m[b]||l;return n?r.a.createElement(O,i(i({ref:t},p),{},{components:n})):r.a.createElement(O,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),l=(n(0),n(156)),o={id:"core-commands-log",title:"Log"},i={unversionedId:"core/commands/core-commands-log",id:"core/commands/core-commands-log",isDocsHomePage:!1,title:"Log",description:"log.help",source:"@site/docs/core/commands/log.md",slug:"/core/commands/core-commands-log",permalink:"/core/commands/core-commands-log",version:"current",sidebar:"coreSidebar",previous:{title:"Keyfob",permalink:"/core/commands/core-commands-keyfob"},next:{title:"Minionutil",permalink:"/core/commands/core-commands-minionutil"}},c=[{value:"<code>log.help</code>",id:"loghelp",children:[]},{value:"<code>log.kernel</code>",id:"logkernel",children:[]},{value:"<code>log.kernel_iter</code>",id:"logkernel_iter",children:[]},{value:"<code>log.query</code>",id:"logquery",children:[]}],p={toc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.a)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.a)("h2",{id:"loghelp"},Object(l.a)("inlineCode",{parentName:"h2"},"log.help")),Object(l.a)("p",null,"Shows this help information."),Object(l.a)("hr",null),Object(l.a)("h2",{id:"logkernel"},Object(l.a)("inlineCode",{parentName:"h2"},"log.kernel")),Object(l.a)("p",null,"Print and/or clear the kernel ring buffer."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"err"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"offset"))," (str): Offset regex to begin from."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"clear"))," (bool): Clear after reading.")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"logkernel_iter"},Object(l.a)("inlineCode",{parentName:"h2"},"log.kernel_iter")),Object(l.a)("p",null,"Helper function to retrieve new kernel log entries (based on cached offset value)."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"err"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"offset_key"))," (str): Key to get value from result and use as offset. Default is ",Object(l.a)("inlineCode",{parentName:"li"},"timestamp"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"reset"))," (bool): Reset cached offset value and start over.")),Object(l.a)("hr",null),Object(l.a)("h2",{id:"logquery"},Object(l.a)("inlineCode",{parentName:"h2"},"log.query")),Object(l.a)("p",null,"Query a log file or any text file."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"file"))," (str): Path of log file.")),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"begin"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"^"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"end"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"$"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",Object(l.a)("inlineCode",{parentName:"li"},".*"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"reverse"))," (bool): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"False"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"first"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"0"),"."),Object(l.a)("li",{parentName:"ul"},Object(l.a)("strong",{parentName:"li"},Object(l.a)("inlineCode",{parentName:"strong"},"last"))," (int): Default is ",Object(l.a)("inlineCode",{parentName:"li"},"100"),".")))}s.isMDXComponent=!0}}]);