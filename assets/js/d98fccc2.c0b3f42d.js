(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{140:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return d}));var o=a(3),r=a(7),n=(a(0),a(156)),i={id:"log-raw-can-messages",title:"Log raw CAN messages"},s={unversionedId:"guides/log-raw-can-messages",id:"guides/log-raw-can-messages",isDocsHomePage:!1,title:"Log raw CAN messages",description:"It is possible to listen for raw CAN data on the OBD port. There are a couple of",source:"@site/docs/guides/log_raw_can_messages.md",slug:"/guides/log-raw-can-messages",permalink:"/guides/log-raw-can-messages",version:"current",sidebar:"guidesSidebar",previous:{title:"Install camera on your AutoPi",permalink:"/guides/install-camera-on-your-autopi"},next:{title:"Setup your TMU DiY Edition",permalink:"/guides/setup-your-tmu-diy-edition"}},l=[{value:"Reading raw CAN data",id:"reading-raw-can-data",children:[{value:"<code>obd.monitor</code>",id:"obdmonitor",children:[]},{value:"<code>obd.export</code>",id:"obdexport",children:[]},{value:"<code>obd.import</code>",id:"obdimport",children:[]}]},{value:"Making sense of raw CAN data",id:"making-sense-of-raw-can-data",children:[]}],c={toc:l};function d(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(n.a)("wrapper",Object(o.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(n.a)("p",null,"It is possible to listen for raw CAN data on the OBD port. There are a couple of\nways that this can be accomplished - a slower python implementation and a faster, C implementation.\nIn this guide we will explore these two options and show the differences between the two. Later on\nwe will also explore how you can make sense of this raw data after it has been recorded."),Object(n.a)("p",null,"It is important to note that the monitoring tools can only be used as a part of an\n",Object(n.a)("a",{parentName:"p",href:"/core/services/core-services-obd-manager"},"OBD service")," workflow. We won't get into details about how\nyou can create a service worker in this guide, however we do have the\n",Object(n.a)("a",{parentName:"p",href:"/guides/create-service-workers"},"Create Service Workers")," guide which you can take a look at\nfor more details on how to create a worker and setup its workflow."),Object(n.a)("h2",{id:"reading-raw-can-data"},"Reading raw CAN data"),Object(n.a)("p",null,"Firstly, we will explore how to read the CAN messages that are visible on the CAN bus. These\nmessages will be raw, meaning that they will simply be binary data that is structured in a\nspecific way. Later on we will also explore how we can make sense of this raw CAN data by\ntransforming it into more readable format using DBC files that can automatically be generated\nfor your vehicle."),Object(n.a)("h3",{id:"obdmonitor"},Object(n.a)("inlineCode",{parentName:"h3"},"obd.monitor")),Object(n.a)("p",null,"The first and simplest way to monitor CAN data is with the\n",Object(n.a)("a",{parentName:"p",href:"../core/services/core-services-obd-manager#monitor"},Object(n.a)("inlineCode",{parentName:"a"},"obd.monitor"))," handler.\nThis handler will continuously listen on the OBD port looking for any data. This data\nwill then be transported down the workflow and there you will be able to use the different\nhooks to transform the data and finally return the data to the cloud, or save it to a file."),Object(n.a)("p",null,"For greater performance read on to the ",Object(n.a)("inlineCode",{parentName:"p"},"obd.export")," handler. The image below shows an example\nsetup for an ",Object(n.a)("inlineCode",{parentName:"p"},"obd.monitor")," worker."),Object(n.a)("p",null,Object(n.a)("img",{alt:"obd_monitor_worker",src:a(242).default})),Object(n.a)("h3",{id:"obdexport"},Object(n.a)("inlineCode",{parentName:"h3"},"obd.export")),Object(n.a)("p",null,Object(n.a)("a",{parentName:"p",href:"../core/services/core-services-obd-manager#export"},Object(n.a)("inlineCode",{parentName:"a"},"obd.export"))," is basically\n",Object(n.a)("inlineCode",{parentName:"p"},"obd.monitor")," on steroids. It is much faster than it's python counterpart and doesn't clog up the\nAutoPi's resources as much. It starts up a separate process that does the monitoring,\ninstead of running as a part of the salt-minion process."),Object(n.a)("p",null,"This however means that the external process will have to attach to the OBD serial port\n(",Object(n.a)("inlineCode",{parentName:"p"},"/dev/serial0"),"), which means that it won't be possible to use ",Object(n.a)("inlineCode",{parentName:"p"},"obd")," commands to read CAN data.\nThis is because the ",Object(n.a)("inlineCode",{parentName:"p"},"obd.export")," handler needs to be sure to catch all CAN messages and it won't\nrelease the lock on the device."),Object(n.a)("p",null,"This handler is also a bit different than other handlers, as it does not pass any meaningful\ndata down the workflow, instead it saves the CAN messages to external files, which can then be\nread by ",Object(n.a)("inlineCode",{parentName:"p"},"obd.import"),". The files are located in ",Object(n.a)("inlineCode",{parentName:"p"},"/opt/autopi/obd/export/protocol_N")," where ",Object(n.a)("inlineCode",{parentName:"p"},"N")," is\nthe protocol number for your vehicle. In that directory you will be able to see a number of log\nfiles which contain the raw data that has been recorded by the handler. An example setup for a\nworkflow can be seen below."),Object(n.a)("p",null,Object(n.a)("img",{alt:"obd_export_worker",src:a(243).default})),Object(n.a)("h3",{id:"obdimport"},Object(n.a)("inlineCode",{parentName:"h3"},"obd.import")),Object(n.a)("p",null,"In order to actually be able to use the recorded data by ",Object(n.a)("inlineCode",{parentName:"p"},"obd.export")," within the AutoPi Core system,\nwe need to somehow import it. This is where\n",Object(n.a)("a",{parentName:"p",href:"../core/services/core-services-obd-manager#import"},Object(n.a)("inlineCode",{parentName:"a"},"obd.import"))," comes in -\nit reads the data that was written to the log files by ",Object(n.a)("inlineCode",{parentName:"p"},"obd.export")," and passes it down the workflow.\nIt is simply a workflow enabler, meaning that after you read the data, you can transform it in any\nway you'd like, execute any triggers and use a returner to save the data on the cloud or a local\nfile, just like with ",Object(n.a)("inlineCode",{parentName:"p"},"obd.monitor"),"."),Object(n.a)("p",null,Object(n.a)("img",{alt:"obd_import_worker",src:a(244).default})),Object(n.a)("h2",{id:"making-sense-of-raw-can-data"},"Making sense of raw CAN data"),Object(n.a)("p",null,"A key converter that can be used in the workflows described above is the\n",Object(n.a)("a",{parentName:"p",href:"../core/services/core-services-obd-manager#can"},"CAN converter"),". It is able\nto read the CAN database file that you have for your vehicle's protocol and transform the binary\ndata that has been passed to it into a more sensible format. Both ",Object(n.a)("inlineCode",{parentName:"p"},"obd.monitor")," and ",Object(n.a)("inlineCode",{parentName:"p"},"obd.import"),"\nuse the CAN converter in the workflows to sanitize the data."),Object(n.a)("p",null,"It is important to note however, that the DBC (CAN database) file would only be available if you have\nsetup CAN loggers for your device. In the ",Object(n.a)("a",{parentName:"p",href:"https://my.autopi.io"},"AutoPi Cloud")," navigate to Car\nExplorer > Loggers where you'll be able to see all the loggers you currently have. They need to\nbe of type CAN. There are a few guides that you can take a look at to get them up an running:"),Object(n.a)("ol",null,Object(n.a)("li",{parentName:"ol"},Object(n.a)("p",{parentName:"li"},Object(n.a)("a",{parentName:"p",href:"https://community.autopi.io/t/guide-how-to-setup-power-cycle-for-an-electric-vehicle/1668"},"How to setup power cycle for an electric vehicle"))),Object(n.a)("li",{parentName:"ol"},Object(n.a)("p",{parentName:"li"},Object(n.a)("a",{parentName:"p",href:"https://community.autopi.io/t/how-to-import-custom-dbc-files/2091"},"How to import custom DBC files")))))}d.isMDXComponent=!0},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var o=a(0),r=a.n(o);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(a),b=o,h=u["".concat(i,".").concat(b)]||u[b]||p[b]||n;return a?r.a.createElement(h,s(s({ref:t},c),{},{components:a})):r.a.createElement(h,s({ref:t},c))}));function b(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<n;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},242:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/obd_monitor_worker-3f496518499bfe36794ca5e8e2cff275.png"},243:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/obd_export_worker-652bf565d5f705940197ebadd37e7730.png"},244:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/obd_import_worker-a7a1b5e55120f7c38d072c86e7f8bf89.png"}}]);