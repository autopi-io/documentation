(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{129:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,O=s["".concat(o,".").concat(u)]||s[u]||m[u]||l;return n?a.a.createElement(O,i(i({ref:t},b),{},{components:n})):a.a.createElement(O,i({ref:t},b))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var b=2;b<l;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),l=(n(0),n(129)),o={id:"core-cmd-log",title:"Log"},i={unversionedId:"core/commands/core-cmd-log",id:"core/commands/core-cmd-log",isDocsHomePage:!1,title:"Log",description:"log.help",source:"@site/docs/core/commands/log.md",slug:"/core/commands/core-cmd-log",permalink:"/documentation/docs/core/commands/core-cmd-log",version:"current",sidebar:"coreSidebar",previous:{title:"Hostapd",permalink:"/documentation/docs/core/commands/core-cmd-hostapd"},next:{title:"Minionutil",permalink:"/documentation/docs/core/commands/core-cmd-minionutil"}},c=[{value:"<code>log.help</code>",id:"loghelp",children:[]},{value:"<code>log.kernel</code>",id:"logkernel",children:[]},{value:"<code>log.kernel_iter</code>",id:"logkernel_iter",children:[]},{value:"<code>log.query</code>",id:"logquery",children:[]}],b={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"loghelp"},Object(l.b)("inlineCode",{parentName:"h2"},"log.help")),Object(l.b)("p",null,"Shows this help information."),Object(l.b)("hr",null),Object(l.b)("h2",{id:"logkernel"},Object(l.b)("inlineCode",{parentName:"h2"},"log.kernel")),Object(l.b)("p",null,"Print and/or clear the kernel ring buffer."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",Object(l.b)("inlineCode",{parentName:"li"},"err"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"offset"))," (str): Offset regex to begin from."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"clear"))," (bool): Clear after reading.")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"logkernel_iter"},Object(l.b)("inlineCode",{parentName:"h2"},"log.kernel_iter")),Object(l.b)("p",null,"Helper function to retrieve new kernel log entries (based on cached offset value)."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"level"))," (str): Restict output the the given level and higher. Default is ",Object(l.b)("inlineCode",{parentName:"li"},"err"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"facilities"))," (str): Restrict output to the given list (comma-separated) of facilities."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"offset_key"))," (str): Key to get value from result and use as offset. Default is ",Object(l.b)("inlineCode",{parentName:"li"},"timestamp"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"reset"))," (bool): Reset cached offset value and start over.")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"logquery"},Object(l.b)("inlineCode",{parentName:"h2"},"log.query")),Object(l.b)("p",null,"Query a log file or any text file."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"ARGUMENTS")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"file"))," (str): Path of log file.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"OPTIONAL ARGUMENTS")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"begin"))," (str): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"^"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"end"))," (str): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"$"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"match"))," (str): Default is ",Object(l.b)("inlineCode",{parentName:"li"},".*"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"count"))," (int): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"0"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"reverse"))," (bool): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"False"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"before"))," (int): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"0"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"after"))," (int): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"0"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"first"))," (int): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"0"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"strong"},"last"))," (int): Default is ",Object(l.b)("inlineCode",{parentName:"li"},"100"),".")))}p.isMDXComponent=!0}}]);